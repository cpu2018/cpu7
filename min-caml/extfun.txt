<dump after extfun>
=================================================================================================
<LETREC> xor ------ Type :  Fun ( args = ( Bool  Bool ) -> exp = ( Bool ) ) 
.   <ARGS> x, y,  </ARGS>
.   <IF>
.   .   <VAR> x
.   <THEN>
.   .   <NOT> 
.   .   .   <VAR> y
.   <ELSE>
.   .   <VAR> y
<IN>
<LETREC> sgn ------ Type :  Fun ( args = ( Float ) -> exp = ( Float ) ) 
.   <ARGS> x,  </ARGS>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> x
.   .   .   <FLOAT> 0.
.   <THEN>
.   .   <FLOAT> 0.
.   <ELSE>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <VAR> x
.   .   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <FLOAT> 1.
.   .   <ELSE>
.   .   .   <FLOAT> -1.
<IN>
<LETREC> fneg_cond ------ Type :  Fun ( args = ( Bool  Float ) -> exp = ( Float ) ) 
.   <ARGS> cond, x,  </ARGS>
.   <IF>
.   .   <VAR> cond
.   <THEN>
.   .   <VAR> x
.   <ELSE>
.   .   <FNEG> 
.   .   .   <VAR> x
<IN>
<LETREC> add_mod5 ------ Type :  Fun ( args = ( Int  Int ) -> exp = ( Int ) ) 
.   <ARGS> x, y,  </ARGS>
.   <LET> sum ------ Type :  Int 
.   .   <ADD> 
.   .   .   <VAR> x
.   .   .   <VAR> y
.   <IN>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 5
.   .   .   <VAR> sum
.   <THEN>
.   .   <SUB> 
.   .   .   <VAR> sum
.   .   .   <INT> 5
.   <ELSE>
.   .   <VAR> sum
<IN>
<LETREC> vecset ------ Type :  Fun ( args = ( Array ( Float )  Float  Float  Float ) -> exp = ( Unit ) ) 
.   <ARGS> v, x, y, z,  </ARGS>
.   <LET> Tu2 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> v
.   .   .   <INT> 0
.   .   .   <VAR> x
.   <IN>
.   <LET> Tu1 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> v
.   .   .   <INT> 1
.   .   .   <VAR> y
.   <IN>
.   <PUT> 
.   .   <VAR> v
.   .   <INT> 2
.   .   <VAR> z
<IN>
<LETREC> vecfill ------ Type :  Fun ( args = ( Array ( Float )  Float ) -> exp = ( Unit ) ) 
.   <ARGS> v, elem,  </ARGS>
.   <LET> Tu4 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> v
.   .   .   <INT> 0
.   .   .   <VAR> elem
.   <IN>
.   <LET> Tu3 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> v
.   .   .   <INT> 1
.   .   .   <VAR> elem
.   <IN>
.   <PUT> 
.   .   <VAR> v
.   .   <INT> 2
.   .   <VAR> elem
<IN>
<LETREC> vecbzero ------ Type :  Fun ( args = ( Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> v,  </ARGS>
.   <APP> 
.   .   <VAR> vecfill
.   .   <ARGS> 
.   .   .   <VAR> v
.   .   .   <FLOAT> 0.
<IN>
<LETREC> veccpy ------ Type :  Fun ( args = ( Array ( Float )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> dest, src,  </ARGS>
.   <LET> Tu6 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 0
.   .   .   <GET> 
.   .   .   .   <VAR> src
.   .   .   .   <INT> 0
.   <IN>
.   <LET> Tu5 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 1
.   .   .   <GET> 
.   .   .   .   <VAR> src
.   .   .   .   <INT> 1
.   <IN>
.   <PUT> 
.   .   <VAR> dest
.   .   <INT> 2
.   .   <GET> 
.   .   .   <VAR> src
.   .   .   <INT> 2
<IN>
<LETREC> vecdist2 ------ Type :  Fun ( args = ( Array ( Float )  Array ( Float ) ) -> exp = ( Float ) ) 
.   <ARGS> p, q,  </ARGS>
.   <FADD> 
.   .   <FADD> 
.   .   .   <FMUL> 
.   .   .   .   <FSUB> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> q
.   .   .   .   .   .   <INT> 0
.   .   .   .   <FSUB> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> q
.   .   .   .   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <FSUB> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> q
.   .   .   .   .   .   <INT> 1
.   .   .   .   <FSUB> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> q
.   .   .   .   .   .   <INT> 1
.   .   <FMUL> 
.   .   .   <FSUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> p
.   .   .   .   .   <INT> 2
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> q
.   .   .   .   .   <INT> 2
.   .   .   <FSUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> p
.   .   .   .   .   <INT> 2
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> q
.   .   .   .   .   <INT> 2
<IN>
<LETREC> vecunit ------ Type :  Fun ( args = ( Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> v,  </ARGS>
.   <LET> il ------ Type :  Float 
.   .   <FDIV> 
.   .   .   <FLOAT> 1.
.   .   .   <Sqrt> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FADD> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   <INT> 2
.   <IN>
.   <LET> Tu8 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> v
.   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 0
.   .   .   .   <VAR> il
.   <IN>
.   <LET> Tu7 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> v
.   .   .   <INT> 1
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> il
.   <IN>
.   <PUT> 
.   .   <VAR> v
.   .   <INT> 2
.   .   <FMUL> 
.   .   .   <GET> 
.   .   .   .   <VAR> v
.   .   .   .   <INT> 2
.   .   .   <VAR> il
<IN>
<LETREC> vecunit_sgn ------ Type :  Fun ( args = ( Array ( Float )  Bool ) -> exp = ( Unit ) ) 
.   <ARGS> v, inv,  </ARGS>
.   <LET> l ------ Type :  Float 
.   .   <Sqrt> 
.   .   .   <FADD> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   <FMUL> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   <INT> 2
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   <INT> 2
.   <IN>
.   <LET> il ------ Type :  Float 
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <VAR> l
.   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <FLOAT> 1.
.   .   <ELSE>
.   .   .   <IF>
.   .   .   .   <VAR> inv
.   .   .   <THEN>
.   .   .   .   <FDIV> 
.   .   .   .   .   <FLOAT> -1.
.   .   .   .   .   <VAR> l
.   .   .   <ELSE>
.   .   .   .   <FDIV> 
.   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   <VAR> l
.   <IN>
.   <LET> Tu10 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> v
.   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 0
.   .   .   .   <VAR> il
.   <IN>
.   <LET> Tu9 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> v
.   .   .   <INT> 1
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> il
.   <IN>
.   <PUT> 
.   .   <VAR> v
.   .   <INT> 2
.   .   <FMUL> 
.   .   .   <GET> 
.   .   .   .   <VAR> v
.   .   .   .   <INT> 2
.   .   .   <VAR> il
<IN>
<LETREC> veciprod ------ Type :  Fun ( args = ( Array ( Float )  Array ( Float ) ) -> exp = ( Float ) ) 
.   <ARGS> v, w,  </ARGS>
.   <FADD> 
.   .   <FADD> 
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> w
.   .   .   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 1
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> w
.   .   .   .   .   <INT> 1
.   .   <FMUL> 
.   .   .   <GET> 
.   .   .   .   <VAR> v
.   .   .   .   <INT> 2
.   .   .   <GET> 
.   .   .   .   <VAR> w
.   .   .   .   <INT> 2
<IN>
<LETREC> veciprod2 ------ Type :  Fun ( args = ( Array ( Float )  Float  Float  Float ) -> exp = ( Float ) ) 
.   <ARGS> v, w0, w1, w2,  </ARGS>
.   <FADD> 
.   .   <FADD> 
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 0
.   .   .   .   <VAR> w0
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> w1
.   .   <FMUL> 
.   .   .   <GET> 
.   .   .   .   <VAR> v
.   .   .   .   <INT> 2
.   .   .   <VAR> w2
<IN>
<LETREC> vecaccum ------ Type :  Fun ( args = ( Array ( Float )  Float  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> dest, scale, v,  </ARGS>
.   <LET> Tu12 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 0
.   .   .   <FADD> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 0
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> scale
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   <INT> 0
.   <IN>
.   <LET> Tu11 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 1
.   .   .   <FADD> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 1
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> scale
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   <INT> 1
.   <IN>
.   <PUT> 
.   .   <VAR> dest
.   .   <INT> 2
.   .   <FADD> 
.   .   .   <GET> 
.   .   .   .   <VAR> dest
.   .   .   .   <INT> 2
.   .   .   <FMUL> 
.   .   .   .   <VAR> scale
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 2
<IN>
<LETREC> vecadd ------ Type :  Fun ( args = ( Array ( Float )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> dest, v,  </ARGS>
.   <LET> Tu14 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 0
.   .   .   <FADD> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 0
.   <IN>
.   <LET> Tu13 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 1
.   .   .   <FADD> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 1
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 1
.   <IN>
.   <PUT> 
.   .   <VAR> dest
.   .   <INT> 2
.   .   <FADD> 
.   .   .   <GET> 
.   .   .   .   <VAR> dest
.   .   .   .   <INT> 2
.   .   .   <GET> 
.   .   .   .   <VAR> v
.   .   .   .   <INT> 2
<IN>
<LETREC> vecmul ------ Type :  Fun ( args = ( Array ( Float )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> dest, v,  </ARGS>
.   <LET> Tu16 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 0
.   <IN>
.   <LET> Tu15 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 1
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 1
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 1
.   <IN>
.   <PUT> 
.   .   <VAR> dest
.   .   <INT> 2
.   .   <FMUL> 
.   .   .   <GET> 
.   .   .   .   <VAR> dest
.   .   .   .   <INT> 2
.   .   .   <GET> 
.   .   .   .   <VAR> v
.   .   .   .   <INT> 2
<IN>
<LETREC> vecscale ------ Type :  Fun ( args = ( Array ( Float )  Float ) -> exp = ( Unit ) ) 
.   <ARGS> dest, scale,  </ARGS>
.   <LET> Tu18 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 0
.   .   .   .   <VAR> scale
.   <IN>
.   <LET> Tu17 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 1
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> scale
.   <IN>
.   <PUT> 
.   .   <VAR> dest
.   .   <INT> 2
.   .   <FMUL> 
.   .   .   <GET> 
.   .   .   .   <VAR> dest
.   .   .   .   <INT> 2
.   .   .   <VAR> scale
<IN>
<LETREC> vecaccumv ------ Type :  Fun ( args = ( Array ( Float )  Array ( Float )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> dest, v, w,  </ARGS>
.   <LET> Tu20 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 0
.   .   .   <FADD> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 0
.   .   .   .   <FMUL> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> w
.   .   .   .   .   .   <INT> 0
.   <IN>
.   <LET> Tu19 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> dest
.   .   .   <INT> 1
.   .   .   <FADD> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dest
.   .   .   .   .   <INT> 1
.   .   .   .   <FMUL> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> w
.   .   .   .   .   .   <INT> 1
.   <IN>
.   <PUT> 
.   .   <VAR> dest
.   .   <INT> 2
.   .   <FADD> 
.   .   .   <GET> 
.   .   .   .   <VAR> dest
.   .   .   .   <INT> 2
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 2
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> w
.   .   .   .   .   <INT> 2
<IN>
<LETREC> o_texturetype ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Int ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> m_tex, xm_shape, xm_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <VAR> m_tex
<IN>
<LETREC> o_form ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Int ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, m_shape, xm_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <VAR> m_shape
<IN>
<LETREC> o_reflectiontype ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Int ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, m_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <VAR> m_surface
<IN>
<LETREC> o_isinvert ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Bool ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, xm_xyz, m_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <VAR> m_invert
<IN>
<LETREC> o_isrot ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Int ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, m_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <VAR> m_isrot
<IN>
<LETREC> o_param_a ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, m_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_abc
.   .   <INT> 0
<IN>
<LETREC> o_param_b ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, m_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_abc
.   .   <INT> 1
<IN>
<LETREC> o_param_c ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, m_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_abc
.   .   <INT> 2
<IN>
<LETREC> o_param_abc ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Array ( Float ) ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, m_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <VAR> m_abc
<IN>
<LETREC> o_param_x ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, m_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_xyz
.   .   <INT> 0
<IN>
<LETREC> o_param_y ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, m_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_xyz
.   .   <INT> 1
<IN>
<LETREC> o_param_z ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, m_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_xyz
.   .   <INT> 2
<IN>
<LETREC> o_diffuse ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, m_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_surfparams
.   .   <INT> 0
<IN>
<LETREC> o_hilight ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, m_surfparams, xm_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_surfparams
.   .   <INT> 1
<IN>
<LETREC> o_color_red ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, m_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, m_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_color
.   .   <INT> 0
<IN>
<LETREC> o_color_green ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, m_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, m_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_color
.   .   <INT> 1
<IN>
<LETREC> o_color_blue ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, m_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, m_color, xm_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_color
.   .   <INT> 2
<IN>
<LETREC> o_param_r1 ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, m_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_rot123
.   .   <INT> 0
<IN>
<LETREC> o_param_r2 ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, m_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_rot123
.   .   <INT> 1
<IN>
<LETREC> o_param_r3 ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Float ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, m_rot123, xm_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <GET> 
.   .   <VAR> m_rot123
.   .   <INT> 2
<IN>
<LETREC> o_param_ctbl ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Array ( Float ) ) ) 
.   <ARGS> m,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_tex, xm_shape, xm_surface, xm_isrot, xm_abc, xm_xyz, xm_invert, xm_surfparams, xm_color, xm_rot123, m_ctbl, </TUPLE> 
.   .   <VAR> m
.   <IN>
.   <VAR> m_ctbl
<IN>
<LETREC> p_rgb ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) -> exp = ( Array ( Float ) ) ) 
.   <ARGS> pixel,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> m_rgb, xm_isect_ps, xm_sids, xm_cdif, xm_engy, xm_r20p, xm_gid, xm_nvectors, </TUPLE> 
.   .   <VAR> pixel
.   <IN>
.   <VAR> m_rgb
<IN>
<LETREC> p_intersection_points ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) -> exp = ( Array ( Array ( Float ) ) ) ) 
.   <ARGS> pixel,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_rgb, m_isect_ps, xm_sids, xm_cdif, xm_engy, xm_r20p, xm_gid, xm_nvectors, </TUPLE> 
.   .   <VAR> pixel
.   <IN>
.   <VAR> m_isect_ps
<IN>
<LETREC> p_surface_ids ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) -> exp = ( Array ( Int ) ) ) 
.   <ARGS> pixel,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_rgb, xm_isect_ps, m_sids, xm_cdif, xm_engy, xm_r20p, xm_gid, xm_nvectors, </TUPLE> 
.   .   <VAR> pixel
.   <IN>
.   <VAR> m_sids
<IN>
<LETREC> p_calc_diffuse ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) -> exp = ( Array ( Bool ) ) ) 
.   <ARGS> pixel,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_rgb, xm_isect_ps, xm_sids, m_cdif, xm_engy, xm_r20p, xm_gid, xm_nvectors, </TUPLE> 
.   .   <VAR> pixel
.   <IN>
.   <VAR> m_cdif
<IN>
<LETREC> p_energy ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) -> exp = ( Array ( Array ( Float ) ) ) ) 
.   <ARGS> pixel,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_rgb, xm_isect_ps, xm_sids, xm_cdif, m_engy, xm_r20p, xm_gid, xm_nvectors, </TUPLE> 
.   .   <VAR> pixel
.   <IN>
.   <VAR> m_engy
<IN>
<LETREC> p_received_ray_20percent ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) -> exp = ( Array ( Array ( Float ) ) ) ) 
.   <ARGS> pixel,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_rgb, xm_isect_ps, xm_sids, xm_cdif, xm_engy, m_r20p, xm_gid, xm_nvectors, </TUPLE> 
.   .   <VAR> pixel
.   <IN>
.   <VAR> m_r20p
<IN>
<LETREC> p_group_id ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) -> exp = ( Int ) ) 
.   <ARGS> pixel,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_rgb, xm_isect_ps, xm_sids, xm_cdif, xm_engy, xm_r20p, m_gid, xm_nvectors, </TUPLE> 
.   .   <VAR> pixel
.   <IN>
.   <GET> 
.   .   <VAR> m_gid
.   .   <INT> 0
<IN>
<LETREC> p_set_group_id ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> pixel, id,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_rgb, xm_isect_ps, xm_sids, xm_cdif, xm_engy, xm_r20p, m_gid, xm_nvectors, </TUPLE> 
.   .   <VAR> pixel
.   <IN>
.   <PUT> 
.   .   <VAR> m_gid
.   .   <INT> 0
.   .   <VAR> id
<IN>
<LETREC> p_nvectors ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) -> exp = ( Array ( Array ( Float ) ) ) ) 
.   <ARGS> pixel,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_rgb, xm_isect_ps, xm_sids, xm_cdif, xm_engy, xm_r20p, xm_gid, m_nvectors, </TUPLE> 
.   .   <VAR> pixel
.   <IN>
.   <VAR> m_nvectors
<IN>
<LETREC> d_vec ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) -> exp = ( Array ( Float ) ) ) 
.   <ARGS> d,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> m_vec, xm_const, </TUPLE> 
.   .   <VAR> d
.   <IN>
.   <VAR> m_vec
<IN>
<LETREC> d_const ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) -> exp = ( Array ( Array ( Float ) ) ) ) 
.   <ARGS> d,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> dm_vec, m_const, </TUPLE> 
.   .   <VAR> d
.   <IN>
.   <VAR> m_const
<IN>
<LETREC> r_surface_id ------ Type :  Fun ( args = ( Tuple ( Int  Tuple ( Array ( Float )  Array ( Array ( Float ) ) )  Float ) ) -> exp = ( Int ) ) 
.   <ARGS> r,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> m_sid, xm_dvec, xm_br, </TUPLE> 
.   .   <VAR> r
.   <IN>
.   <VAR> m_sid
<IN>
<LETREC> r_dvec ------ Type :  Fun ( args = ( Tuple ( Int  Tuple ( Array ( Float )  Array ( Array ( Float ) ) )  Float ) ) -> exp = ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) ) 
.   <ARGS> r,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_sid, m_dvec, xm_br, </TUPLE> 
.   .   <VAR> r
.   <IN>
.   <VAR> m_dvec
<IN>
<LETREC> r_bright ------ Type :  Fun ( args = ( Tuple ( Int  Tuple ( Array ( Float )  Array ( Array ( Float ) ) )  Float ) ) -> exp = ( Float ) ) 
.   <ARGS> r,  </ARGS>
.   <LETTUPLE> 
.   .   <TUPLE> xm_sid, xm_dvec, m_br, </TUPLE> 
.   .   <VAR> r
.   <IN>
.   <VAR> m_br
<IN>
<LETREC> rad ------ Type :  Fun ( args = ( Float ) -> exp = ( Float ) ) 
.   <ARGS> x,  </ARGS>
.   <FMUL> 
.   .   <VAR> x
.   .   <FLOAT> 0.017453293
<IN>
<LETREC> read_screen_settings ------ Type :  Fun ( args = ( Unit ) -> exp = ( Unit ) ) 
.   <ARGS> Tu21,  </ARGS>
.   <LET> Tu35 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screen
.   .   .   <INT> 0
.   .   .   <Read_Float> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu34 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screen
.   .   .   <INT> 1
.   .   .   <Read_Float> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu33 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screen
.   .   .   <INT> 2
.   .   .   <Read_Float> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> v1 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> rad
.   .   .   <ARGS> 
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   <IN>
.   <LET> cos_v1 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> cos
.   .   .   <ARGS> 
.   .   .   .   <VAR> v1
.   <IN>
.   <LET> sin_v1 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> sin
.   .   .   <ARGS> 
.   .   .   .   <VAR> v1
.   <IN>
.   <LET> v2 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> rad
.   .   .   <ARGS> 
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   <IN>
.   <LET> cos_v2 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> cos
.   .   .   <ARGS> 
.   .   .   .   <VAR> v2
.   <IN>
.   <LET> sin_v2 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> sin
.   .   .   <ARGS> 
.   .   .   .   <VAR> v2
.   <IN>
.   <LET> Tu32 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screenz_dir
.   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> cos_v1
.   .   .   .   .   <VAR> sin_v2
.   .   .   .   <FLOAT> 200.
.   <IN>
.   <LET> Tu31 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screenz_dir
.   .   .   <INT> 1
.   .   .   <FMUL> 
.   .   .   .   <VAR> sin_v1
.   .   .   .   <FLOAT> -200.
.   <IN>
.   <LET> Tu30 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screenz_dir
.   .   .   <INT> 2
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> cos_v1
.   .   .   .   .   <VAR> cos_v2
.   .   .   .   <FLOAT> 200.
.   <IN>
.   <LET> Tu29 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screenx_dir
.   .   .   <INT> 0
.   .   .   <VAR> cos_v2
.   <IN>
.   <LET> Tu28 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screenx_dir
.   .   .   <INT> 1
.   .   .   <FLOAT> 0.
.   <IN>
.   <LET> Tu27 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screenx_dir
.   .   .   <INT> 2
.   .   .   <FNEG> 
.   .   .   .   <VAR> sin_v2
.   <IN>
.   <LET> Tu26 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screeny_dir
.   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <FNEG> 
.   .   .   .   .   <VAR> sin_v1
.   .   .   .   <VAR> sin_v2
.   <IN>
.   <LET> Tu25 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screeny_dir
.   .   .   <INT> 1
.   .   .   <FNEG> 
.   .   .   .   <VAR> cos_v1
.   <IN>
.   <LET> Tu24 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> screeny_dir
.   .   .   <INT> 2
.   .   .   <FMUL> 
.   .   .   .   <FNEG> 
.   .   .   .   .   <VAR> sin_v1
.   .   .   .   <VAR> cos_v2
.   <IN>
.   <LET> Tu23 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> viewpoint
.   .   .   <INT> 0
.   .   .   <FSUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> screen
.   .   .   .   .   <INT> 0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> screenz_dir
.   .   .   .   .   <INT> 0
.   <IN>
.   <LET> Tu22 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> viewpoint
.   .   .   <INT> 1
.   .   .   <FSUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> screen
.   .   .   .   .   <INT> 1
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> screenz_dir
.   .   .   .   .   <INT> 1
.   <IN>
.   <PUT> 
.   .   <VAR> viewpoint
.   .   <INT> 2
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> screen
.   .   .   .   <INT> 2
.   .   .   <GET> 
.   .   .   .   <VAR> screenz_dir
.   .   .   .   <INT> 2
<IN>
<LETREC> read_light ------ Type :  Fun ( args = ( Unit ) -> exp = ( Unit ) ) 
.   <ARGS> Tu36,  </ARGS>
.   <LET> nl ------ Type :  Int 
.   .   <Read_Int> 
.   .   .   <UNIT> 
.   <IN>
.   <LET> l1 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> rad
.   .   .   <ARGS> 
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   <IN>
.   <LET> sl1 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> sin
.   .   .   <ARGS> 
.   .   .   .   <VAR> l1
.   <IN>
.   <LET> Tu39 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> light
.   .   .   <INT> 1
.   .   .   <FNEG> 
.   .   .   .   <VAR> sl1
.   <IN>
.   <LET> l2 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> rad
.   .   .   <ARGS> 
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   <IN>
.   <LET> cl1 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> cos
.   .   .   <ARGS> 
.   .   .   .   <VAR> l1
.   <IN>
.   <LET> sl2 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> sin
.   .   .   <ARGS> 
.   .   .   .   <VAR> l2
.   <IN>
.   <LET> Tu38 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> light
.   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <VAR> cl1
.   .   .   .   <VAR> sl2
.   <IN>
.   <LET> cl2 ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> cos
.   .   .   <ARGS> 
.   .   .   .   <VAR> l2
.   <IN>
.   <LET> Tu37 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> light
.   .   .   <INT> 2
.   .   .   <FMUL> 
.   .   .   .   <VAR> cl1
.   .   .   .   <VAR> cl2
.   <IN>
.   <PUT> 
.   .   <VAR> beam
.   .   <INT> 0
.   .   <Read_Float> 
.   .   .   <UNIT> 
<IN>
<LETREC> rotate_quadratic_matrix ------ Type :  Fun ( args = ( Array ( Float )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> abc, rot,  </ARGS>
.   <LET> cos_x ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> cos
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rot
.   .   .   .   .   <INT> 0
.   <IN>
.   <LET> sin_x ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> sin
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rot
.   .   .   .   .   <INT> 0
.   <IN>
.   <LET> cos_y ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> cos
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rot
.   .   .   .   .   <INT> 1
.   <IN>
.   <LET> sin_y ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> sin
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rot
.   .   .   .   .   <INT> 1
.   <IN>
.   <LET> cos_z ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> cos
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rot
.   .   .   .   .   <INT> 2
.   <IN>
.   <LET> sin_z ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> sin
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rot
.   .   .   .   .   <INT> 2
.   <IN>
.   <LET> m00 ------ Type :  Float 
.   .   <FMUL> 
.   .   .   <VAR> cos_y
.   .   .   <VAR> cos_z
.   <IN>
.   <LET> m01 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> sin_x
.   .   .   .   .   <VAR> sin_y
.   .   .   .   <VAR> cos_z
.   .   .   <FMUL> 
.   .   .   .   <VAR> cos_x
.   .   .   .   <VAR> sin_z
.   <IN>
.   <LET> m02 ------ Type :  Float 
.   .   <FADD> 
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> cos_x
.   .   .   .   .   <VAR> sin_y
.   .   .   .   <VAR> cos_z
.   .   .   <FMUL> 
.   .   .   .   <VAR> sin_x
.   .   .   .   <VAR> sin_z
.   <IN>
.   <LET> m10 ------ Type :  Float 
.   .   <FMUL> 
.   .   .   <VAR> cos_y
.   .   .   <VAR> sin_z
.   <IN>
.   <LET> m11 ------ Type :  Float 
.   .   <FADD> 
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> sin_x
.   .   .   .   .   <VAR> sin_y
.   .   .   .   <VAR> sin_z
.   .   .   <FMUL> 
.   .   .   .   <VAR> cos_x
.   .   .   .   <VAR> cos_z
.   <IN>
.   <LET> m12 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> cos_x
.   .   .   .   .   <VAR> sin_y
.   .   .   .   <VAR> sin_z
.   .   .   <FMUL> 
.   .   .   .   <VAR> sin_x
.   .   .   .   <VAR> cos_z
.   <IN>
.   <LET> m20 ------ Type :  Float 
.   .   <FNEG> 
.   .   .   <VAR> sin_y
.   <IN>
.   <LET> m21 ------ Type :  Float 
.   .   <FMUL> 
.   .   .   <VAR> sin_x
.   .   .   <VAR> cos_y
.   <IN>
.   <LET> m22 ------ Type :  Float 
.   .   <FMUL> 
.   .   .   <VAR> cos_x
.   .   .   <VAR> cos_y
.   <IN>
.   <LET> ao ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> abc
.   .   .   <INT> 0
.   <IN>
.   <LET> bo ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> abc
.   .   .   <INT> 1
.   <IN>
.   <LET> co ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> abc
.   .   .   <INT> 2
.   <IN>
.   <LET> Tu44 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> abc
.   .   .   <INT> 0
.   .   .   <FADD> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> ao
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> m00
.   .   .   .   .   .   .   <VAR> m00
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> bo
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> m10
.   .   .   .   .   .   .   <VAR> m10
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> co
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> m20
.   .   .   .   .   .   <VAR> m20
.   <IN>
.   <LET> Tu43 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> abc
.   .   .   <INT> 1
.   .   .   <FADD> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> ao
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> m01
.   .   .   .   .   .   .   <VAR> m01
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> bo
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> m11
.   .   .   .   .   .   .   <VAR> m11
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> co
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> m21
.   .   .   .   .   .   <VAR> m21
.   <IN>
.   <LET> Tu42 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> abc
.   .   .   <INT> 2
.   .   .   <FADD> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> ao
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> m02
.   .   .   .   .   .   .   <VAR> m02
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> bo
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> m12
.   .   .   .   .   .   .   <VAR> m12
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> co
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> m22
.   .   .   .   .   .   <VAR> m22
.   <IN>
.   <LET> Tu41 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> rot
.   .   .   <INT> 0
.   .   .   <FMUL> 
.   .   .   .   <FLOAT> 2.
.   .   .   .   <FADD> 
.   .   .   .   .   <FADD> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> ao
.   .   .   .   .   .   .   .   <VAR> m01
.   .   .   .   .   .   .   <VAR> m02
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> bo
.   .   .   .   .   .   .   .   <VAR> m11
.   .   .   .   .   .   .   <VAR> m12
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> co
.   .   .   .   .   .   .   <VAR> m21
.   .   .   .   .   .   <VAR> m22
.   <IN>
.   <LET> Tu40 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> rot
.   .   .   <INT> 1
.   .   .   <FMUL> 
.   .   .   .   <FLOAT> 2.
.   .   .   .   <FADD> 
.   .   .   .   .   <FADD> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> ao
.   .   .   .   .   .   .   .   <VAR> m00
.   .   .   .   .   .   .   <VAR> m02
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> bo
.   .   .   .   .   .   .   .   <VAR> m10
.   .   .   .   .   .   .   <VAR> m12
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> co
.   .   .   .   .   .   .   <VAR> m20
.   .   .   .   .   .   <VAR> m22
.   <IN>
.   <PUT> 
.   .   <VAR> rot
.   .   <INT> 2
.   .   <FMUL> 
.   .   .   <FLOAT> 2.
.   .   .   <FADD> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> ao
.   .   .   .   .   .   .   <VAR> m00
.   .   .   .   .   .   <VAR> m01
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> bo
.   .   .   .   .   .   .   <VAR> m10
.   .   .   .   .   .   <VAR> m11
.   .   .   .   <FMUL> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> co
.   .   .   .   .   .   <VAR> m20
.   .   .   .   .   <VAR> m21
<IN>
<LETREC> read_nth_object ------ Type :  Fun ( args = ( Int ) -> exp = ( Bool ) ) 
.   <ARGS> n,  </ARGS>
.   <LET> texture ------ Type :  Int 
.   .   <Read_Int> 
.   .   .   <UNIT> 
.   <IN>
.   <IF>
.   .   <NOT> 
.   .   .   <EQ> 
.   .   .   .   <VAR> texture
.   .   .   .   <NEG> 
.   .   .   .   .   <INT> 1
.   <THEN>
.   .   <LET> form ------ Type :  Int 
.   .   .   <Read_Int> 
.   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> refltype ------ Type :  Int 
.   .   .   <Read_Int> 
.   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> isrot_p ------ Type :  Int 
.   .   .   <Read_Int> 
.   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> abc ------ Type :  Array ( Float ) 
.   .   .   <ARRAY> 
.   .   .   .   <INT> 3
.   .   .   .   <FLOAT> 0.
.   .   <IN>
.   .   <LET> Tu63 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> abc
.   .   .   .   <INT> 0
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu62 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> abc
.   .   .   .   <INT> 1
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu61 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> abc
.   .   .   .   <INT> 2
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> xyz ------ Type :  Array ( Float ) 
.   .   .   <ARRAY> 
.   .   .   .   <INT> 3
.   .   .   .   <FLOAT> 0.
.   .   <IN>
.   .   <LET> Tu60 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> xyz
.   .   .   .   <INT> 0
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu59 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> xyz
.   .   .   .   <INT> 1
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu58 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> xyz
.   .   .   .   <INT> 2
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> m_invert ------ Type :  Bool 
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <Read_Float> 
.   .   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> reflparam ------ Type :  Array ( Float ) 
.   .   .   <ARRAY> 
.   .   .   .   <INT> 2
.   .   .   .   <FLOAT> 0.
.   .   <IN>
.   .   <LET> Tu57 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> reflparam
.   .   .   .   <INT> 0
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu56 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> reflparam
.   .   .   .   <INT> 1
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> color ------ Type :  Array ( Float ) 
.   .   .   <ARRAY> 
.   .   .   .   <INT> 3
.   .   .   .   <FLOAT> 0.
.   .   <IN>
.   .   <LET> Tu55 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> color
.   .   .   .   <INT> 0
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu54 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> color
.   .   .   .   <INT> 1
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu53 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> color
.   .   .   .   <INT> 2
.   .   .   .   <Read_Float> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> rotation ------ Type :  Array ( Float ) 
.   .   .   <ARRAY> 
.   .   .   .   <INT> 3
.   .   .   .   <FLOAT> 0.
.   .   <IN>
.   .   <LET> Tu52 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> isrot_p
.   .   .   .   .   .   <INT> 0
.   .   .   <THEN>
.   .   .   .   <LET> Tu46 ------ Type :  Unit 
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> rotation
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> rad
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <Read_Float> 
.   .   .   .   .   .   .   .   .   <UNIT> 
.   .   .   .   <IN>
.   .   .   .   <LET> Tu45 ------ Type :  Unit 
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> rotation
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> rad
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <Read_Float> 
.   .   .   .   .   .   .   .   .   <UNIT> 
.   .   .   .   <IN>
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> rotation
.   .   .   .   .   <INT> 2
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> rad
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <Read_Float> 
.   .   .   .   .   .   .   .   <UNIT> 
.   .   .   <ELSE>
.   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> m_invert2 ------ Type :  Bool 
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> form
.   .   .   .   .   <INT> 2
.   .   .   <THEN>
.   .   .   .   <BOOL> true
.   .   .   <ELSE>
.   .   .   .   <VAR> m_invert
.   .   <IN>
.   .   <LET> ctbl ------ Type :  Array ( Float ) 
.   .   .   <ARRAY> 
.   .   .   .   <INT> 4
.   .   .   .   <FLOAT> 0.
.   .   <IN>
.   .   <LET> obj ------ Type :  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) 
.   .   .   <TUPLE> 
.   .   .   .   <VAR> texture
.   .   .   .   <VAR> form
.   .   .   .   <VAR> refltype
.   .   .   .   <VAR> isrot_p
.   .   .   .   <VAR> abc
.   .   .   .   <VAR> xyz
.   .   .   .   <VAR> m_invert2
.   .   .   .   <VAR> reflparam
.   .   .   .   <VAR> color
.   .   .   .   <VAR> rotation
.   .   .   .   <VAR> ctbl
.   .   <IN>
.   .   <LET> Tu51 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> objects
.   .   .   .   <VAR> n
.   .   .   .   <VAR> obj
.   .   <IN>
.   .   <LET> Tu50 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> form
.   .   .   .   .   <INT> 3
.   .   .   <THEN>
.   .   .   .   <LET> a ------ Type :  Float 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   <INT> 0
.   .   .   .   <IN>
.   .   .   .   <LET> Tu48 ------ Type :  Unit 
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   .   <VAR> a
.   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> sgn
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> a
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> a
.   .   .   .   .   .   .   .   .   <VAR> a
.   .   .   .   <IN>
.   .   .   .   <LET> b ------ Type :  Float 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   <INT> 1
.   .   .   .   <IN>
.   .   .   .   <LET> Tu47 ------ Type :  Unit 
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   .   <VAR> b
.   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> sgn
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> b
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> b
.   .   .   .   .   .   .   .   .   <VAR> b
.   .   .   .   <IN>
.   .   .   .   <LET> c ------ Type :  Float 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   <INT> 2
.   .   .   .   <IN>
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> abc
.   .   .   .   .   <INT> 2
.   .   .   .   .   <IF>
.   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   <VAR> c
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> sgn
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> c
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> c
.   .   .   .   .   .   .   .   <VAR> c
.   .   .   <ELSE>
.   .   .   .   <IF>
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> form
.   .   .   .   .   .   <INT> 2
.   .   .   .   <THEN>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> vecunit_sgn
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   .   <VAR> m_invert
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu49 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> isrot_p
.   .   .   .   .   .   <INT> 0
.   .   .   <THEN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> rotate_quadratic_matrix
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   <VAR> rotation
.   .   .   <ELSE>
.   .   .   .   <UNIT> 
.   .   <IN>
.   .   <BOOL> true
.   <ELSE>
.   .   <BOOL> false
<IN>
<LETREC> read_object ------ Type :  Fun ( args = ( Int ) -> exp = ( Unit ) ) 
.   <ARGS> n,  </ARGS>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <INT> 60
.   .   .   .   <VAR> n
.   <THEN>
.   .   <IF>
.   .   .   <APP> 
.   .   .   .   <VAR> read_nth_object
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> n
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> read_object
.   .   .   .   <ARGS> 
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> n
.   .   .   .   .   .   <INT> 1
.   .   <ELSE>
.   .   .   <PUT> 
.   .   .   .   <VAR> n_objects
.   .   .   .   <INT> 0
.   .   .   .   <VAR> n
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> read_all_object ------ Type :  Fun ( args = ( Unit ) -> exp = ( Unit ) ) 
.   <ARGS> Tu64,  </ARGS>
.   <APP> 
.   .   <VAR> read_object
.   .   <ARGS> 
.   .   .   <INT> 0
<IN>
<LETREC> read_net_item ------ Type :  Fun ( args = ( Int ) -> exp = ( Array ( Int ) ) ) 
.   <ARGS> length,  </ARGS>
.   <LET> item ------ Type :  Int 
.   .   <Read_Int> 
.   .   .   <UNIT> 
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> item
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <ARRAY> 
.   .   .   <ADD> 
.   .   .   .   <VAR> length
.   .   .   .   <INT> 1
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <ELSE>
.   .   <LET> v ------ Type :  Array ( Int ) 
.   .   .   <APP> 
.   .   .   .   <VAR> read_net_item
.   .   .   .   <ARGS> 
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> length
.   .   .   .   .   .   <INT> 1
.   .   <IN>
.   .   <LET> Tu65 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> v
.   .   .   .   <VAR> length
.   .   .   .   <VAR> item
.   .   <IN>
.   .   <VAR> v
<IN>
<LETREC> read_or_network ------ Type :  Fun ( args = ( Int ) -> exp = ( Array ( Array ( Int ) ) ) ) 
.   <ARGS> length,  </ARGS>
.   <LET> net ------ Type :  Array ( Int ) 
.   .   <APP> 
.   .   .   <VAR> read_net_item
.   .   .   <ARGS> 
.   .   .   .   <INT> 0
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <GET> 
.   .   .   .   <VAR> net
.   .   .   .   <INT> 0
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <ARRAY> 
.   .   .   <ADD> 
.   .   .   .   <VAR> length
.   .   .   .   <INT> 1
.   .   .   <VAR> net
.   <ELSE>
.   .   <LET> v ------ Type :  Array ( Array ( Int ) ) 
.   .   .   <APP> 
.   .   .   .   <VAR> read_or_network
.   .   .   .   <ARGS> 
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> length
.   .   .   .   .   .   <INT> 1
.   .   <IN>
.   .   <LET> Tu66 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> v
.   .   .   .   <VAR> length
.   .   .   .   <VAR> net
.   .   <IN>
.   .   <VAR> v
<IN>
<LETREC> read_and_network ------ Type :  Fun ( args = ( Int ) -> exp = ( Unit ) ) 
.   <ARGS> n,  </ARGS>
.   <LET> net ------ Type :  Array ( Int ) 
.   .   <APP> 
.   .   .   <VAR> read_net_item
.   .   .   <ARGS> 
.   .   .   .   <INT> 0
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <GET> 
.   .   .   .   <VAR> net
.   .   .   .   <INT> 0
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <UNIT> 
.   <ELSE>
.   .   <LET> Tu67 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> and_net
.   .   .   .   <VAR> n
.   .   .   .   <VAR> net
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> read_and_network
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> n
.   .   .   .   .   <INT> 1
<IN>
<LETREC> read_parameter ------ Type :  Fun ( args = ( Unit ) -> exp = ( Unit ) ) 
.   <ARGS> Tu68,  </ARGS>
.   <LET> Tu72 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> read_screen_settings
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu71 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> read_light
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu70 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> read_all_object
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu69 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> read_and_network
.   .   .   <ARGS> 
.   .   .   .   <INT> 0
.   <IN>
.   <PUT> 
.   .   <VAR> or_net
.   .   <INT> 0
.   .   <APP> 
.   .   .   <VAR> read_or_network
.   .   .   <ARGS> 
.   .   .   .   <INT> 0
<IN>
<LETREC> solver_rect_surface ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float )  Float  Float  Float  Int  Int  Int ) -> exp = ( Bool ) ) 
.   <ARGS> m, dirvec, b0, b1, b2, i0, i1, i2,  </ARGS>
.   <IF>
.   .   <EQ> 
.   .   .   <GET> 
.   .   .   .   <VAR> dirvec
.   .   .   .   <VAR> i0
.   .   .   <FLOAT> 0.
.   <THEN>
.   .   <BOOL> false
.   <ELSE>
.   .   <LET> abc ------ Type :  Array ( Float ) 
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_abc
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   <IN>
.   .   <LET> d ------ Type :  Float 
.   .   .   <APP> 
.   .   .   .   <VAR> fneg_cond
.   .   .   .   <ARGS> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> xor
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   <VAR> i0
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   <VAR> i0
.   .   <IN>
.   .   <LET> d2 ------ Type :  Float 
.   .   .   <FDIV> 
.   .   .   .   <FSUB> 
.   .   .   .   .   <VAR> d
.   .   .   .   .   <VAR> b0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <VAR> i0
.   .   <IN>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   <VAR> i1
.   .   .   .   .   <IF>
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   <VAR> i1
.   .   .   .   .   .   .   .   <VAR> b1
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   <VAR> i1
.   .   .   .   .   .   .   .   <VAR> b1
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   <VAR> i1
.   .   .   .   .   .   .   <VAR> b1
.   .   <THEN>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   .   <VAR> i2
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   .   <VAR> i2
.   .   .   .   .   .   .   .   .   <VAR> b2
.   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   .   <VAR> i2
.   .   .   .   .   .   .   .   .   <VAR> b2
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   <VAR> i2
.   .   .   .   .   .   .   .   <VAR> b2
.   .   .   <THEN>
.   .   .   .   <LET> Tu73 ------ Type :  Unit 
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <VAR> d2
.   .   .   .   <IN>
.   .   .   .   <BOOL> true
.   .   .   <ELSE>
.   .   .   .   <BOOL> false
.   .   <ELSE>
.   .   .   <BOOL> false
<IN>
<LETREC> solver_rect ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float )  Float  Float  Float ) -> exp = ( Int ) ) 
.   <ARGS> m, dirvec, b0, b1, b2,  </ARGS>
.   <IF>
.   .   <APP> 
.   .   .   <VAR> solver_rect_surface
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   .   .   .   <VAR> dirvec
.   .   .   .   <VAR> b0
.   .   .   .   <VAR> b1
.   .   .   .   <VAR> b2
.   .   .   .   <INT> 0
.   .   .   .   <INT> 1
.   .   .   .   <INT> 2
.   <THEN>
.   .   <INT> 1
.   <ELSE>
.   .   <IF>
.   .   .   <APP> 
.   .   .   .   <VAR> solver_rect_surface
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <INT> 1
.   .   .   .   .   <INT> 2
.   .   .   .   .   <INT> 0
.   .   <THEN>
.   .   .   <INT> 2
.   .   <ELSE>
.   .   .   <IF>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> solver_rect_surface
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   <VAR> b2
.   .   .   .   .   .   <VAR> b0
.   .   .   .   .   .   <VAR> b1
.   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <INT> 1
.   .   .   <THEN>
.   .   .   .   <INT> 3
.   .   .   <ELSE>
.   .   .   .   <INT> 0
<IN>
<LETREC> solver_surface ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float )  Float  Float  Float ) -> exp = ( Int ) ) 
.   <ARGS> m, dirvec, b0, b1, b2,  </ARGS>
.   <LET> abc ------ Type :  Array ( Float ) 
.   .   <APP> 
.   .   .   <VAR> o_param_abc
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   <IN>
.   <LET> d ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> veciprod
.   .   .   <ARGS> 
.   .   .   .   <VAR> dirvec
.   .   .   .   <VAR> abc
.   <IN>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <VAR> d
.   .   .   .   <FLOAT> 0.
.   <THEN>
.   .   <LET> Tu74 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> solver_dist
.   .   .   .   <INT> 0
.   .   .   .   <FDIV> 
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> veciprod2
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> abc
.   .   .   .   .   .   .   .   <VAR> b0
.   .   .   .   .   .   .   .   <VAR> b1
.   .   .   .   .   .   .   .   <VAR> b2
.   .   .   .   .   <VAR> d
.   .   <IN>
.   .   <INT> 1
.   <ELSE>
.   .   <INT> 0
<IN>
<LETREC> quadratic ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Float  Float  Float ) -> exp = ( Float ) ) 
.   <ARGS> m, v0, v1, v2,  </ARGS>
.   <LET> diag_part ------ Type :  Float 
.   .   <FADD> 
.   .   .   <FADD> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> v0
.   .   .   .   .   .   <VAR> v0
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   <FMUL> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> v1
.   .   .   .   .   .   <VAR> v1
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> v2
.   .   .   .   .   <VAR> v2
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <APP> 
.   .   .   .   <VAR> o_isrot
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   <INT> 0
.   <THEN>
.   .   <VAR> diag_part
.   <ELSE>
.   .   <FADD> 
.   .   .   <FADD> 
.   .   .   .   <FADD> 
.   .   .   .   .   <VAR> diag_part
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> v1
.   .   .   .   .   .   .   <VAR> v2
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_param_r1
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   <FMUL> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> v2
.   .   .   .   .   .   <VAR> v0
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_r2
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> v0
.   .   .   .   .   <VAR> v1
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_r3
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
<IN>
<LETREC> bilinear ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Float  Float  Float  Float  Float  Float ) -> exp = ( Float ) ) 
.   <ARGS> m, v0, v1, v2, w0, w1, w2,  </ARGS>
.   <LET> diag_part ------ Type :  Float 
.   .   <FADD> 
.   .   .   <FADD> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> v0
.   .   .   .   .   .   <VAR> w0
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   <FMUL> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> v1
.   .   .   .   .   .   <VAR> w1
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> v2
.   .   .   .   .   <VAR> w2
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <APP> 
.   .   .   .   <VAR> o_isrot
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   <INT> 0
.   <THEN>
.   .   <VAR> diag_part
.   <ELSE>
.   .   <FADD> 
.   .   .   <VAR> diag_part
.   .   .   <FMUL> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FADD> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> v2
.   .   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> v1
.   .   .   .   .   .   .   .   .   <VAR> w2
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_r1
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> v0
.   .   .   .   .   .   .   .   .   <VAR> w2
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> v2
.   .   .   .   .   .   .   .   .   <VAR> w0
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_r2
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> v0
.   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> v1
.   .   .   .   .   .   .   .   <VAR> w0
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_param_r3
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   <FLOAT> 0.5
<IN>
<LETREC> solver_second ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float )  Float  Float  Float ) -> exp = ( Int ) ) 
.   <ARGS> m, dirvec, b0, b1, b2,  </ARGS>
.   <LET> aa ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> quadratic
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <INT> 0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <INT> 1
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <INT> 2
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> aa
.   .   .   <FLOAT> 0.
.   <THEN>
.   .   <INT> 0
.   <ELSE>
.   .   <LET> bb ------ Type :  Float 
.   .   .   <APP> 
.   .   .   .   <VAR> bilinear
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   <INT> 2
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
.   .   <IN>
.   .   <LET> cc0 ------ Type :  Float 
.   .   .   <APP> 
.   .   .   .   <VAR> quadratic
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
.   .   <IN>
.   .   <LET> cc ------ Type :  Float 
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_form
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   <INT> 3
.   .   .   <THEN>
.   .   .   .   <FSUB> 
.   .   .   .   .   <VAR> cc0
.   .   .   .   .   <FLOAT> 1.
.   .   .   <ELSE>
.   .   .   .   <VAR> cc0
.   .   <IN>
.   .   <LET> d ------ Type :  Float 
.   .   .   <FSUB> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> bb
.   .   .   .   .   <VAR> bb
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> aa
.   .   .   .   .   <VAR> cc
.   .   <IN>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <VAR> d
.   .   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <LET> sd ------ Type :  Float 
.   .   .   .   <Sqrt> 
.   .   .   .   .   <VAR> d
.   .   .   <IN>
.   .   .   <LET> t1 ------ Type :  Float 
.   .   .   .   <IF>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   <THEN>
.   .   .   .   .   <VAR> sd
.   .   .   .   <ELSE>
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <VAR> sd
.   .   .   <IN>
.   .   .   <LET> Tu75 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   <INT> 0
.   .   .   .   .   <FDIV> 
.   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   <VAR> t1
.   .   .   .   .   .   .   <VAR> bb
.   .   .   .   .   .   <VAR> aa
.   .   .   <IN>
.   .   .   <INT> 1
.   .   <ELSE>
.   .   .   <INT> 0
<IN>
<LETREC> solver ------ Type :  Fun ( args = ( Int  Array ( Float )  Array ( Float ) ) -> exp = ( Int ) ) 
.   <ARGS> index, dirvec, org,  </ARGS>
.   <LET> m ------ Type :  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) 
.   .   <GET> 
.   .   .   <VAR> objects
.   .   .   <VAR> index
.   <IN>
.   <LET> b0 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> org
.   .   .   .   <INT> 0
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_x
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> b1 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> org
.   .   .   .   <INT> 1
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_y
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> b2 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> org
.   .   .   .   <INT> 2
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_z
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> m_shape ------ Type :  Int 
.   .   <APP> 
.   .   .   <VAR> o_form
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> m_shape
.   .   .   <INT> 1
.   <THEN>
.   .   <APP> 
.   .   .   <VAR> solver_rect
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   .   .   .   <VAR> dirvec
.   .   .   .   <VAR> b0
.   .   .   .   <VAR> b1
.   .   .   .   <VAR> b2
.   <ELSE>
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <VAR> m_shape
.   .   .   .   <INT> 2
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> solver_surface
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
.   .   <ELSE>
.   .   .   <APP> 
.   .   .   .   <VAR> solver_second
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
<IN>
<LETREC> solver_rect_fast ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float )  Array ( Float )  Float  Float  Float ) -> exp = ( Int ) ) 
.   <ARGS> m, v, dconst, b0, b1, b2,  </ARGS>
.   <LET> d0 ------ Type :  Float 
.   .   <FMUL> 
.   .   .   <FSUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dconst
.   .   .   .   .   <INT> 0
.   .   .   .   <VAR> b0
.   .   .   <GET> 
.   .   .   .   <VAR> dconst
.   .   .   .   <INT> 1
.   <IN>
.   <IF>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   <IF>
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> d0
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <VAR> b1
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> d0
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <VAR> b1
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> d0
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <VAR> b1
.   .   <THEN>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   <VAR> d0
.   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   .   <VAR> b2
.   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   <VAR> d0
.   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   .   <VAR> b2
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> d0
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   <VAR> b2
.   .   .   <THEN>
.   .   .   .   <NOT> 
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <FLOAT> 0.
.   .   .   <ELSE>
.   .   .   .   <BOOL> false
.   .   <ELSE>
.   .   .   <BOOL> false
.   <THEN>
.   .   <LET> Tu76 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> solver_dist
.   .   .   .   <INT> 0
.   .   .   .   <VAR> d0
.   .   <IN>
.   .   <INT> 1
.   <ELSE>
.   .   <LET> d1 ------ Type :  Float 
.   .   .   <FMUL> 
.   .   .   .   <FSUB> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   <INT> 2
.   .   .   .   .   <VAR> b1
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dconst
.   .   .   .   .   <INT> 3
.   .   <IN>
.   .   <IF>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   <VAR> d1
.   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> b0
.   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   <VAR> d1
.   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> b0
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> d1
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <VAR> b0
.   .   .   <THEN>
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> d1
.   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   .   .   <VAR> b2
.   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> d1
.   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   .   .   <VAR> b2
.   .   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   <VAR> d1
.   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   .   <VAR> b2
.   .   .   .   <THEN>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   .   <INT> 3
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   <ELSE>
.   .   .   .   .   <BOOL> false
.   .   .   <ELSE>
.   .   .   .   <BOOL> false
.   .   <THEN>
.   .   .   <LET> Tu77 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   <INT> 0
.   .   .   .   .   <VAR> d1
.   .   .   <IN>
.   .   .   <INT> 2
.   .   <ELSE>
.   .   .   <LET> d2 ------ Type :  Float 
.   .   .   .   <FMUL> 
.   .   .   .   .   <FSUB> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   <INT> 4
.   .   .   .   .   .   <VAR> b2
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   <INT> 5
.   .   .   <IN>
.   .   .   <IF>
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   .   <VAR> b0
.   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   .   <VAR> b0
.   .   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> b0
.   .   .   .   <THEN>
.   .   .   .   .   <IF>
.   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   .   .   .   <VAR> b1
.   .   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   .   .   .   <VAR> b1
.   .   .   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> d2
.   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   .   .   <VAR> b1
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   .   .   <INT> 5
.   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <BOOL> false
.   .   .   .   <ELSE>
.   .   .   .   .   <BOOL> false
.   .   .   <THEN>
.   .   .   .   <LET> Tu78 ------ Type :  Unit 
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <VAR> d2
.   .   .   .   <IN>
.   .   .   .   <INT> 3
.   .   .   <ELSE>
.   .   .   .   <INT> 0
<IN>
<LETREC> solver_surface_fast ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float )  Float  Float  Float ) -> exp = ( Int ) ) 
.   <ARGS> m, dconst, b0, b1, b2,  </ARGS>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <FLOAT> 0.
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dconst
.   .   .   .   .   <INT> 0
.   <THEN>
.   .   <LET> Tu79 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> solver_dist
.   .   .   .   <INT> 0
.   .   .   .   <FADD> 
.   .   .   .   .   <FADD> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <VAR> b0
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   <VAR> b1
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   <INT> 3
.   .   .   .   .   .   <VAR> b2
.   .   <IN>
.   .   <INT> 1
.   <ELSE>
.   .   <INT> 0
<IN>
<LETREC> solver_second_fast ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float )  Float  Float  Float ) -> exp = ( Int ) ) 
.   <ARGS> m, dconst, b0, b1, b2,  </ARGS>
.   <LET> aa ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> dconst
.   .   .   <INT> 0
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> aa
.   .   .   <FLOAT> 0.
.   <THEN>
.   .   <INT> 0
.   <ELSE>
.   .   <LET> neg_bb ------ Type :  Float 
.   .   .   <FADD> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> b0
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <VAR> b1
.   .   .   .   <FMUL> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   <INT> 3
.   .   .   .   .   <VAR> b2
.   .   <IN>
.   .   <LET> cc0 ------ Type :  Float 
.   .   .   <APP> 
.   .   .   .   <VAR> quadratic
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
.   .   <IN>
.   .   <LET> cc ------ Type :  Float 
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_form
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   <INT> 3
.   .   .   <THEN>
.   .   .   .   <FSUB> 
.   .   .   .   .   <VAR> cc0
.   .   .   .   .   <FLOAT> 1.
.   .   .   <ELSE>
.   .   .   .   <VAR> cc0
.   .   <IN>
.   .   <LET> d ------ Type :  Float 
.   .   .   <FSUB> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> neg_bb
.   .   .   .   .   <VAR> neg_bb
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> aa
.   .   .   .   .   <VAR> cc
.   .   <IN>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <VAR> d
.   .   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <LET> Tu80 ------ Type :  Unit 
.   .   .   .   <IF>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   <THEN>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <VAR> neg_bb
.   .   .   .   .   .   .   .   <Sqrt> 
.   .   .   .   .   .   .   .   .   <VAR> d
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   .   <INT> 4
.   .   .   .   <ELSE>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   <VAR> neg_bb
.   .   .   .   .   .   .   .   <Sqrt> 
.   .   .   .   .   .   .   .   .   <VAR> d
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   .   <INT> 4
.   .   .   <IN>
.   .   .   <INT> 1
.   .   <ELSE>
.   .   .   <INT> 0
<IN>
<LETREC> solver_fast ------ Type :  Fun ( args = ( Int  Tuple ( Array ( Float )  Array ( Array ( Float ) ) )  Array ( Float ) ) -> exp = ( Int ) ) 
.   <ARGS> index, dirvec, org,  </ARGS>
.   <LET> m ------ Type :  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) 
.   .   <GET> 
.   .   .   <VAR> objects
.   .   .   <VAR> index
.   <IN>
.   <LET> b0 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> org
.   .   .   .   <INT> 0
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_x
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> b1 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> org
.   .   .   .   <INT> 1
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_y
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> b2 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> org
.   .   .   .   <INT> 2
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_z
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> dconsts ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> d_const
.   .   .   <ARGS> 
.   .   .   .   <VAR> dirvec
.   <IN>
.   <LET> dconst ------ Type :  Array ( Float ) 
.   .   <GET> 
.   .   .   <VAR> dconsts
.   .   .   <VAR> index
.   <IN>
.   <LET> m_shape ------ Type :  Int 
.   .   <APP> 
.   .   .   <VAR> o_form
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> m_shape
.   .   .   <INT> 1
.   <THEN>
.   .   <APP> 
.   .   .   <VAR> solver_rect_fast
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> d_vec
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> dirvec
.   .   .   .   <VAR> dconst
.   .   .   .   <VAR> b0
.   .   .   .   <VAR> b1
.   .   .   .   <VAR> b2
.   <ELSE>
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <VAR> m_shape
.   .   .   .   <INT> 2
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> solver_surface_fast
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> dconst
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
.   .   <ELSE>
.   .   .   <APP> 
.   .   .   .   <VAR> solver_second_fast
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> dconst
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
<IN>
<LETREC> solver_surface_fast2 ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float )  Array ( Float )  Float  Float  Float ) -> exp = ( Int ) ) 
.   <ARGS> m, dconst, sconst, b0, b1, b2,  </ARGS>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <FLOAT> 0.
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dconst
.   .   .   .   .   <INT> 0
.   <THEN>
.   .   <LET> Tu81 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> solver_dist
.   .   .   .   <INT> 0
.   .   .   .   <FMUL> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> sconst
.   .   .   .   .   .   <INT> 3
.   .   <IN>
.   .   <INT> 1
.   <ELSE>
.   .   <INT> 0
<IN>
<LETREC> solver_second_fast2 ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float )  Array ( Float )  Float  Float  Float ) -> exp = ( Int ) ) 
.   <ARGS> m, dconst, sconst, b0, b1, b2,  </ARGS>
.   <LET> aa ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> dconst
.   .   .   <INT> 0
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> aa
.   .   .   <FLOAT> 0.
.   <THEN>
.   .   <INT> 0
.   <ELSE>
.   .   <LET> neg_bb ------ Type :  Float 
.   .   .   <FADD> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> b0
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <VAR> b1
.   .   .   .   <FMUL> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   <INT> 3
.   .   .   .   .   <VAR> b2
.   .   <IN>
.   .   <LET> cc ------ Type :  Float 
.   .   .   <GET> 
.   .   .   .   <VAR> sconst
.   .   .   .   <INT> 3
.   .   <IN>
.   .   <LET> d ------ Type :  Float 
.   .   .   <FSUB> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> neg_bb
.   .   .   .   .   <VAR> neg_bb
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> aa
.   .   .   .   .   <VAR> cc
.   .   <IN>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <VAR> d
.   .   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <LET> Tu82 ------ Type :  Unit 
.   .   .   .   <IF>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   <THEN>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <VAR> neg_bb
.   .   .   .   .   .   .   .   <Sqrt> 
.   .   .   .   .   .   .   .   .   <VAR> d
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   .   <INT> 4
.   .   .   .   <ELSE>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   <VAR> neg_bb
.   .   .   .   .   .   .   .   <Sqrt> 
.   .   .   .   .   .   .   .   .   <VAR> d
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   .   .   <INT> 4
.   .   .   <IN>
.   .   .   <INT> 1
.   .   <ELSE>
.   .   .   <INT> 0
<IN>
<LETREC> solver_fast2 ------ Type :  Fun ( args = ( Int  Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) -> exp = ( Int ) ) 
.   <ARGS> index, dirvec,  </ARGS>
.   <LET> m ------ Type :  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) 
.   .   <GET> 
.   .   .   <VAR> objects
.   .   .   <VAR> index
.   <IN>
.   <LET> sconst ------ Type :  Array ( Float ) 
.   .   <APP> 
.   .   .   <VAR> o_param_ctbl
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   <IN>
.   <LET> b0 ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> sconst
.   .   .   <INT> 0
.   <IN>
.   <LET> b1 ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> sconst
.   .   .   <INT> 1
.   <IN>
.   <LET> b2 ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> sconst
.   .   .   <INT> 2
.   <IN>
.   <LET> dconsts ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> d_const
.   .   .   <ARGS> 
.   .   .   .   <VAR> dirvec
.   <IN>
.   <LET> dconst ------ Type :  Array ( Float ) 
.   .   <GET> 
.   .   .   <VAR> dconsts
.   .   .   <VAR> index
.   <IN>
.   <LET> m_shape ------ Type :  Int 
.   .   <APP> 
.   .   .   <VAR> o_form
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> m_shape
.   .   .   <INT> 1
.   <THEN>
.   .   <APP> 
.   .   .   <VAR> solver_rect_fast
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> d_vec
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> dirvec
.   .   .   .   <VAR> dconst
.   .   .   .   <VAR> b0
.   .   .   .   <VAR> b1
.   .   .   .   <VAR> b2
.   <ELSE>
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <VAR> m_shape
.   .   .   .   <INT> 2
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> solver_surface_fast2
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> dconst
.   .   .   .   .   <VAR> sconst
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
.   .   <ELSE>
.   .   .   <APP> 
.   .   .   .   <VAR> solver_second_fast2
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> dconst
.   .   .   .   .   <VAR> sconst
.   .   .   .   .   <VAR> b0
.   .   .   .   .   <VAR> b1
.   .   .   .   .   <VAR> b2
<IN>
<LETREC> setup_rect_table ------ Type :  Fun ( args = ( Array ( Float )  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Array ( Float ) ) ) 
.   <ARGS> vec, m,  </ARGS>
.   <LET> const ------ Type :  Array ( Float ) 
.   .   <ARRAY> 
.   .   .   <INT> 6
.   .   .   <FLOAT> 0.
.   <IN>
.   <LET> Tu88 ------ Type :  Unit 
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> vec
.   .   .   .   .   <INT> 0
.   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 1
.   .   .   .   <FLOAT> 0.
.   .   <ELSE>
.   .   .   <LET> Tu83 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 0
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> fneg_cond
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> xor
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   <IN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 1
.   .   .   .   <FDIV> 
.   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   <INT> 0
.   <IN>
.   <LET> Tu87 ------ Type :  Unit 
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> vec
.   .   .   .   .   <INT> 1
.   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 3
.   .   .   .   <FLOAT> 0.
.   .   <ELSE>
.   .   .   <LET> Tu84 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 2
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> fneg_cond
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> xor
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   <IN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 3
.   .   .   .   <FDIV> 
.   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   <INT> 1
.   <IN>
.   <LET> Tu86 ------ Type :  Unit 
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> vec
.   .   .   .   .   <INT> 2
.   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 5
.   .   .   .   <FLOAT> 0.
.   .   <ELSE>
.   .   .   <LET> Tu85 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 4
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> fneg_cond
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> xor
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   <IN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 5
.   .   .   .   <FDIV> 
.   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   <INT> 2
.   <IN>
.   <VAR> const
<IN>
<LETREC> setup_surface_table ------ Type :  Fun ( args = ( Array ( Float )  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Array ( Float ) ) ) 
.   <ARGS> vec, m,  </ARGS>
.   <LET> const ------ Type :  Array ( Float ) 
.   .   <ARRAY> 
.   .   .   <INT> 4
.   .   .   <FLOAT> 0.
.   <IN>
.   <LET> d ------ Type :  Float 
.   .   <FADD> 
.   .   .   <FADD> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   <FMUL> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> vec
.   .   .   .   .   <INT> 2
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   <IN>
.   <LET> Tu92 ------ Type :  Unit 
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <VAR> d
.   .   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <LET> Tu91 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 0
.   .   .   .   .   <FDIV> 
.   .   .   .   .   .   <FLOAT> -1.
.   .   .   .   .   .   <VAR> d
.   .   .   <IN>
.   .   .   <LET> Tu90 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 1
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <VAR> d
.   .   .   <IN>
.   .   .   <LET> Tu89 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 2
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <VAR> d
.   .   .   <IN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 3
.   .   .   .   <FNEG> 
.   .   .   .   .   <FDIV> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   <VAR> d
.   .   <ELSE>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 0
.   .   .   .   <FLOAT> 0.
.   <IN>
.   <VAR> const
<IN>
<LETREC> setup_second_table ------ Type :  Fun ( args = ( Array ( Float )  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Array ( Float ) ) ) 
.   <ARGS> v, m,  </ARGS>
.   <LET> const ------ Type :  Array ( Float ) 
.   .   <ARRAY> 
.   .   .   <INT> 5
.   .   .   <FLOAT> 0.
.   <IN>
.   <LET> aa ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> quadratic
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 1
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 2
.   <IN>
.   <LET> c1 ------ Type :  Float 
.   .   <FNEG> 
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 0
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   <IN>
.   <LET> c2 ------ Type :  Float 
.   .   <FNEG> 
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 1
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   <IN>
.   <LET> c3 ------ Type :  Float 
.   .   <FNEG> 
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> v
.   .   .   .   .   <INT> 2
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   <IN>
.   <LET> Tu99 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> const
.   .   .   <INT> 0
.   .   .   <VAR> aa
.   <IN>
.   <LET> Tu98 ------ Type :  Unit 
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <EQ> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_isrot
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   <INT> 0
.   .   <THEN>
.   .   .   <LET> Tu94 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 1
.   .   .   .   .   <FSUB> 
.   .   .   .   .   .   <VAR> c1
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_param_r2
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_param_r3
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <FLOAT> 0.5
.   .   .   <IN>
.   .   .   <LET> Tu93 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 2
.   .   .   .   .   <FSUB> 
.   .   .   .   .   .   <VAR> c2
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_param_r1
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_param_r3
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <FLOAT> 0.5
.   .   .   <IN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 3
.   .   .   .   <FSUB> 
.   .   .   .   .   <VAR> c3
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_r1
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_r2
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   <FLOAT> 0.5
.   .   <ELSE>
.   .   .   <LET> Tu96 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> c1
.   .   .   <IN>
.   .   .   <LET> Tu95 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> const
.   .   .   .   .   <INT> 2
.   .   .   .   .   <VAR> c2
.   .   .   <IN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 3
.   .   .   .   <VAR> c3
.   <IN>
.   <LET> Tu97 ------ Type :  Unit 
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> aa
.   .   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <PUT> 
.   .   .   .   <VAR> const
.   .   .   .   <INT> 4
.   .   .   .   <FDIV> 
.   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   <VAR> aa
.   .   <ELSE>
.   .   .   <UNIT> 
.   <IN>
.   <VAR> const
<IN>
<LETREC> iter_setup_dirvec_constants ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> dirvec, index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> index
.   <THEN>
.   .   <LET> m ------ Type :  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) 
.   .   .   <GET> 
.   .   .   .   <VAR> objects
.   .   .   .   <VAR> index
.   .   <IN>
.   .   <LET> dconst ------ Type :  Array ( Array ( Float ) ) 
.   .   .   <APP> 
.   .   .   .   <VAR> d_const
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> dirvec
.   .   <IN>
.   .   <LET> v ------ Type :  Array ( Float ) 
.   .   .   <APP> 
.   .   .   .   <VAR> d_vec
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> dirvec
.   .   <IN>
.   .   <LET> m_shape ------ Type :  Int 
.   .   .   <APP> 
.   .   .   .   <VAR> o_form
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   <IN>
.   .   <LET> Tu100 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> m_shape
.   .   .   .   .   <INT> 1
.   .   .   <THEN>
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> dconst
.   .   .   .   .   <VAR> index
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> setup_rect_table
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   <VAR> m
.   .   .   <ELSE>
.   .   .   .   <IF>
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> m_shape
.   .   .   .   .   .   <INT> 2
.   .   .   .   <THEN>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> setup_surface_table
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   <ELSE>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> dconst
.   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> setup_second_table
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> v
.   .   .   .   .   .   .   .   <VAR> m
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> iter_setup_dirvec_constants
.   .   .   <ARGS> 
.   .   .   .   <VAR> dirvec
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 1
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> setup_dirvec_constants ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) -> exp = ( Unit ) ) 
.   <ARGS> dirvec,  </ARGS>
.   <APP> 
.   .   <VAR> iter_setup_dirvec_constants
.   .   <ARGS> 
.   .   .   <VAR> dirvec
.   .   .   <SUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> n_objects
.   .   .   .   .   <INT> 0
.   .   .   .   <INT> 1
<IN>
<LETREC> setup_startp_constants ------ Type :  Fun ( args = ( Array ( Float )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> p, index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> index
.   <THEN>
.   .   <LET> obj ------ Type :  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) 
.   .   .   <GET> 
.   .   .   .   <VAR> objects
.   .   .   .   <VAR> index
.   .   <IN>
.   .   <LET> sconst ------ Type :  Array ( Float ) 
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_ctbl
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> obj
.   .   <IN>
.   .   <LET> m_shape ------ Type :  Int 
.   .   .   <APP> 
.   .   .   .   <VAR> o_form
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> obj
.   .   <IN>
.   .   <LET> Tu104 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> sconst
.   .   .   .   <INT> 0
.   .   .   .   <FSUB> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_x
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> obj
.   .   <IN>
.   .   <LET> Tu103 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> sconst
.   .   .   .   <INT> 1
.   .   .   .   <FSUB> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_y
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> obj
.   .   <IN>
.   .   <LET> Tu102 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> sconst
.   .   .   .   <INT> 2
.   .   .   .   <FSUB> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   <INT> 2
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_z
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> obj
.   .   <IN>
.   .   <LET> Tu101 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> m_shape
.   .   .   .   .   <INT> 2
.   .   .   <THEN>
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> sconst
.   .   .   .   .   <INT> 3
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> veciprod2
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_abc
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> obj
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> sconst
.   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> sconst
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> sconst
.   .   .   .   .   .   .   .   <INT> 2
.   .   .   <ELSE>
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <VAR> m_shape
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   <THEN>
.   .   .   .   .   <LET> cc0 ------ Type :  Float 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> quadratic
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> obj
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> sconst
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> sconst
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> sconst
.   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   <IN>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> sconst
.   .   .   .   .   .   <INT> 3
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   .   <VAR> m_shape
.   .   .   .   .   .   .   .   <INT> 3
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   <VAR> cc0
.   .   .   .   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <VAR> cc0
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> setup_startp_constants
.   .   .   <ARGS> 
.   .   .   .   <VAR> p
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 1
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> setup_startp ------ Type :  Fun ( args = ( Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> p,  </ARGS>
.   <LET> Tu105 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> veccpy
.   .   .   <ARGS> 
.   .   .   .   <VAR> startp_fast
.   .   .   .   <VAR> p
.   <IN>
.   <APP> 
.   .   <VAR> setup_startp_constants
.   .   <ARGS> 
.   .   .   <VAR> p
.   .   .   <SUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> n_objects
.   .   .   .   .   <INT> 0
.   .   .   .   <INT> 1
<IN>
<LETREC> is_rect_outside ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Float  Float  Float ) -> exp = ( Bool ) ) 
.   <ARGS> m, p0, p1, p2,  </ARGS>
.   <IF>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   <IF>
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <VAR> p0
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   <VAR> p0
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <VAR> p0
.   .   <THEN>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <VAR> p1
.   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   <VAR> p1
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <VAR> p1
.   .   .   <THEN>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <VAR> p2
.   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   <VAR> p2
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <VAR> p2
.   .   .   <ELSE>
.   .   .   .   <BOOL> false
.   .   <ELSE>
.   .   .   <BOOL> false
.   <THEN>
.   .   <APP> 
.   .   .   <VAR> o_isinvert
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   <ELSE>
.   .   <NOT> 
.   .   .   <APP> 
.   .   .   .   <VAR> o_isinvert
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
<IN>
<LETREC> is_plane_outside ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Float  Float  Float ) -> exp = ( Bool ) ) 
.   <ARGS> m, p0, p1, p2,  </ARGS>
.   <LET> w ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> veciprod2
.   .   .   <ARGS> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_abc
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   .   .   .   <VAR> p0
.   .   .   .   <VAR> p1
.   .   .   .   <VAR> p2
.   <IN>
.   <NOT> 
.   .   <APP> 
.   .   .   <VAR> xor
.   .   .   <ARGS> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <VAR> w
<IN>
<LETREC> is_second_outside ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Float  Float  Float ) -> exp = ( Bool ) ) 
.   <ARGS> m, p0, p1, p2,  </ARGS>
.   <LET> w ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> quadratic
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   .   .   .   <VAR> p0
.   .   .   .   <VAR> p1
.   .   .   .   <VAR> p2
.   <IN>
.   <LET> w2 ------ Type :  Float 
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_form
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   .   .   .   <INT> 3
.   .   <THEN>
.   .   .   <FSUB> 
.   .   .   .   <VAR> w
.   .   .   .   <FLOAT> 1.
.   .   <ELSE>
.   .   .   <VAR> w
.   <IN>
.   <NOT> 
.   .   <APP> 
.   .   .   <VAR> xor
.   .   .   <ARGS> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <VAR> w2
<IN>
<LETREC> is_outside ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Float  Float  Float ) -> exp = ( Bool ) ) 
.   <ARGS> m, q0, q1, q2,  </ARGS>
.   <LET> p0 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <VAR> q0
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_x
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> p1 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <VAR> q1
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_y
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> p2 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <VAR> q2
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_z
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> m_shape ------ Type :  Int 
.   .   <APP> 
.   .   .   <VAR> o_form
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> m_shape
.   .   .   <INT> 1
.   <THEN>
.   .   <APP> 
.   .   .   <VAR> is_rect_outside
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   .   .   .   <VAR> p0
.   .   .   .   <VAR> p1
.   .   .   .   <VAR> p2
.   <ELSE>
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <VAR> m_shape
.   .   .   .   <INT> 2
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> is_plane_outside
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> p0
.   .   .   .   .   <VAR> p1
.   .   .   .   .   <VAR> p2
.   .   <ELSE>
.   .   .   <APP> 
.   .   .   .   <VAR> is_second_outside
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   .   .   .   <VAR> p0
.   .   .   .   .   <VAR> p1
.   .   .   .   .   <VAR> p2
<IN>
<LETREC> check_all_inside ------ Type :  Fun ( args = ( Int  Array ( Int )  Float  Float  Float ) -> exp = ( Bool ) ) 
.   <ARGS> ofs, iand, q0, q1, q2,  </ARGS>
.   <LET> head ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> iand
.   .   .   <VAR> ofs
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> head
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <BOOL> true
.   <ELSE>
.   .   <IF>
.   .   .   <APP> 
.   .   .   .   <VAR> is_outside
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> objects
.   .   .   .   .   .   <VAR> head
.   .   .   .   .   <VAR> q0
.   .   .   .   .   <VAR> q1
.   .   .   .   .   <VAR> q2
.   .   <THEN>
.   .   .   <BOOL> false
.   .   <ELSE>
.   .   .   <APP> 
.   .   .   .   <VAR> check_all_inside
.   .   .   .   <ARGS> 
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> ofs
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> iand
.   .   .   .   .   <VAR> q0
.   .   .   .   .   <VAR> q1
.   .   .   .   .   <VAR> q2
<IN>
<LETREC> shadow_check_and_group ------ Type :  Fun ( args = ( Int  Array ( Int ) ) -> exp = ( Bool ) ) 
.   <ARGS> iand_ofs, and_group,  </ARGS>
.   <IF>
.   .   <EQ> 
.   .   .   <GET> 
.   .   .   .   <VAR> and_group
.   .   .   .   <VAR> iand_ofs
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <BOOL> false
.   <ELSE>
.   .   <LET> obj ------ Type :  Int 
.   .   .   <GET> 
.   .   .   .   <VAR> and_group
.   .   .   .   <VAR> iand_ofs
.   .   <IN>
.   .   <LET> t0 ------ Type :  Int 
.   .   .   <APP> 
.   .   .   .   <VAR> solver_fast
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> obj
.   .   .   .   .   <VAR> light_dirvec
.   .   .   .   .   <VAR> intersection_point
.   .   <IN>
.   .   <LET> t0p ------ Type :  Float 
.   .   .   <GET> 
.   .   .   .   <VAR> solver_dist
.   .   .   .   <INT> 0
.   .   <IN>
.   .   <IF>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> t0
.   .   .   .   .   .   <INT> 0
.   .   .   <THEN>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <FLOAT> -0.2
.   .   .   .   .   .   <VAR> t0p
.   .   .   <ELSE>
.   .   .   .   <BOOL> false
.   .   <THEN>
.   .   .   <LET> t ------ Type :  Float 
.   .   .   .   <FADD> 
.   .   .   .   .   <VAR> t0p
.   .   .   .   .   <FLOAT> 0.01
.   .   .   <IN>
.   .   .   <LET> q0 ------ Type :  Float 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> light
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <VAR> t
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> intersection_point
.   .   .   .   .   .   <INT> 0
.   .   .   <IN>
.   .   .   <LET> q1 ------ Type :  Float 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> light
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> t
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> intersection_point
.   .   .   .   .   .   <INT> 1
.   .   .   <IN>
.   .   .   <LET> q2 ------ Type :  Float 
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> light
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <VAR> t
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> intersection_point
.   .   .   .   .   .   <INT> 2
.   .   .   <IN>
.   .   .   <IF>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> check_all_inside
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <VAR> and_group
.   .   .   .   .   .   <VAR> q0
.   .   .   .   .   .   <VAR> q1
.   .   .   .   .   .   <VAR> q2
.   .   .   <THEN>
.   .   .   .   <BOOL> true
.   .   .   <ELSE>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> shadow_check_and_group
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   <VAR> iand_ofs
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> and_group
.   .   <ELSE>
.   .   .   <IF>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> objects
.   .   .   .   .   .   .   <VAR> obj
.   .   .   <THEN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> shadow_check_and_group
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   <VAR> iand_ofs
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> and_group
.   .   .   <ELSE>
.   .   .   .   <BOOL> false
<IN>
<LETREC> shadow_check_one_or_group ------ Type :  Fun ( args = ( Int  Array ( Int ) ) -> exp = ( Bool ) ) 
.   <ARGS> ofs, or_group,  </ARGS>
.   <LET> head ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> or_group
.   .   .   <VAR> ofs
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> head
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <BOOL> false
.   <ELSE>
.   .   <LET> and_group ------ Type :  Array ( Int ) 
.   .   .   <GET> 
.   .   .   .   <VAR> and_net
.   .   .   .   <VAR> head
.   .   <IN>
.   .   <LET> shadow_p ------ Type :  Bool 
.   .   .   <APP> 
.   .   .   .   <VAR> shadow_check_and_group
.   .   .   .   <ARGS> 
.   .   .   .   .   <INT> 0
.   .   .   .   .   <VAR> and_group
.   .   <IN>
.   .   <IF>
.   .   .   <VAR> shadow_p
.   .   <THEN>
.   .   .   <BOOL> true
.   .   <ELSE>
.   .   .   <APP> 
.   .   .   .   <VAR> shadow_check_one_or_group
.   .   .   .   <ARGS> 
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> ofs
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> or_group
<IN>
<LETREC> shadow_check_one_or_matrix ------ Type :  Fun ( args = ( Int  Array ( Array ( Int ) ) ) -> exp = ( Bool ) ) 
.   <ARGS> ofs, or_matrix,  </ARGS>
.   <LET> head ------ Type :  Array ( Int ) 
.   .   <GET> 
.   .   .   <VAR> or_matrix
.   .   .   <VAR> ofs
.   <IN>
.   <LET> range_primitive ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> head
.   .   .   <INT> 0
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> range_primitive
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <BOOL> false
.   <ELSE>
.   .   <IF>
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> range_primitive
.   .   .   .   .   <INT> 99
.   .   .   <THEN>
.   .   .   .   <BOOL> true
.   .   .   <ELSE>
.   .   .   .   <LET> t ------ Type :  Int 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> solver_fast
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> range_primitive
.   .   .   .   .   .   .   <VAR> light_dirvec
.   .   .   .   .   .   .   <VAR> intersection_point
.   .   .   .   <IN>
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   <THEN>
.   .   .   .   .   <IF>
.   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <FLOAT> -0.1
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> shadow_check_one_or_group
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   .   <VAR> head
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <BOOL> true
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <BOOL> false
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <BOOL> false
.   .   .   .   <ELSE>
.   .   .   .   .   <BOOL> false
.   .   <THEN>
.   .   .   <IF>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> shadow_check_one_or_group
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> head
.   .   .   <THEN>
.   .   .   .   <BOOL> true
.   .   .   <ELSE>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> shadow_check_one_or_matrix
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   <VAR> ofs
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> or_matrix
.   .   <ELSE>
.   .   .   <APP> 
.   .   .   .   <VAR> shadow_check_one_or_matrix
.   .   .   .   <ARGS> 
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> ofs
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> or_matrix
<IN>
<LETREC> solve_each_element ------ Type :  Fun ( args = ( Int  Array ( Int )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> iand_ofs, and_group, dirvec,  </ARGS>
.   <LET> iobj ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> and_group
.   .   .   <VAR> iand_ofs
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> iobj
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <UNIT> 
.   <ELSE>
.   .   <LET> t0 ------ Type :  Int 
.   .   .   <APP> 
.   .   .   .   <VAR> solver
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> iobj
.   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <VAR> startp
.   .   <IN>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> t0
.   .   .   .   .   <INT> 0
.   .   <THEN>
.   .   .   <LET> t0p ------ Type :  Float 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   <INT> 0
.   .   .   <IN>
.   .   .   <LET> Tu109 ------ Type :  Unit 
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <VAR> t0p
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   <THEN>
.   .   .   .   .   <IF>
.   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> tmin
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <VAR> t0p
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <LET> t ------ Type :  Float 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <VAR> t0p
.   .   .   .   .   .   .   .   <FLOAT> 0.01
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <LET> q0 ------ Type :  Float 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> startp
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <LET> q1 ------ Type :  Float 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> startp
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <LET> q2 ------ Type :  Float 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> startp
.   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> check_all_inside
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> and_group
.   .   .   .   .   .   .   .   .   <VAR> q0
.   .   .   .   .   .   .   .   .   <VAR> q1
.   .   .   .   .   .   .   .   .   <VAR> q2
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <LET> Tu108 ------ Type :  Unit 
.   .   .   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   .   .   <VAR> tmin
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   <IN>
.   .   .   .   .   .   .   <LET> Tu107 ------ Type :  Unit 
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> vecset
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> intersection_point
.   .   .   .   .   .   .   .   .   .   <VAR> q0
.   .   .   .   .   .   .   .   .   .   <VAR> q1
.   .   .   .   .   .   .   .   .   .   <VAR> q2
.   .   .   .   .   .   .   <IN>
.   .   .   .   .   .   .   <LET> Tu106 ------ Type :  Unit 
.   .   .   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   .   .   <VAR> intersected_object_id
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> iobj
.   .   .   .   .   .   .   <IN>
.   .   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   .   <VAR> intsec_rectside
.   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <VAR> t0
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <UNIT> 
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <UNIT> 
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   .   <IN>
.   .   .   <APP> 
.   .   .   .   <VAR> solve_each_element
.   .   .   .   <ARGS> 
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> iand_ofs
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> and_group
.   .   .   .   .   <VAR> dirvec
.   .   <ELSE>
.   .   .   <IF>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> objects
.   .   .   .   .   .   .   <VAR> iobj
.   .   .   <THEN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> solve_each_element
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   <VAR> iand_ofs
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> and_group
.   .   .   .   .   .   <VAR> dirvec
.   .   .   <ELSE>
.   .   .   .   <UNIT> 
<IN>
<LETREC> solve_one_or_network ------ Type :  Fun ( args = ( Int  Array ( Int )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> ofs, or_group, dirvec,  </ARGS>
.   <LET> head ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> or_group
.   .   .   <VAR> ofs
.   <IN>
.   <IF>
.   .   <NOT> 
.   .   .   <EQ> 
.   .   .   .   <VAR> head
.   .   .   .   <NEG> 
.   .   .   .   .   <INT> 1
.   <THEN>
.   .   <LET> and_group ------ Type :  Array ( Int ) 
.   .   .   <GET> 
.   .   .   .   <VAR> and_net
.   .   .   .   <VAR> head
.   .   <IN>
.   .   <LET> Tu110 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> solve_each_element
.   .   .   .   <ARGS> 
.   .   .   .   .   <INT> 0
.   .   .   .   .   <VAR> and_group
.   .   .   .   .   <VAR> dirvec
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> solve_one_or_network
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> ofs
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> or_group
.   .   .   .   <VAR> dirvec
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> trace_or_matrix ------ Type :  Fun ( args = ( Int  Array ( Array ( Int ) )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> ofs, or_network, dirvec,  </ARGS>
.   <LET> head ------ Type :  Array ( Int ) 
.   .   <GET> 
.   .   .   <VAR> or_network
.   .   .   <VAR> ofs
.   <IN>
.   <LET> range_primitive ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> head
.   .   .   <INT> 0
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> range_primitive
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <UNIT> 
.   <ELSE>
.   .   <LET> Tu111 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> range_primitive
.   .   .   .   .   <INT> 99
.   .   .   <THEN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> solve_one_or_network
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> head
.   .   .   .   .   .   <VAR> dirvec
.   .   .   <ELSE>
.   .   .   .   <LET> t ------ Type :  Int 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> solver
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> range_primitive
.   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   <VAR> startp
.   .   .   .   <IN>
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   <THEN>
.   .   .   .   .   <LET> tp ------ Type :  Float 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   <IN>
.   .   .   .   .   <IF>
.   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> tmin
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <VAR> tp
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> solve_one_or_network
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <VAR> head
.   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <UNIT> 
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> trace_or_matrix
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> ofs
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> or_network
.   .   .   .   <VAR> dirvec
<IN>
<LETREC> judge_intersection ------ Type :  Fun ( args = ( Array ( Float ) ) -> exp = ( Bool ) ) 
.   <ARGS> dirvec,  </ARGS>
.   <LET> Tu113 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> tmin
.   .   .   <INT> 0
.   .   .   <FLOAT> 1000000000.
.   <IN>
.   <LET> Tu112 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> trace_or_matrix
.   .   .   <ARGS> 
.   .   .   .   <INT> 0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> or_net
.   .   .   .   .   <INT> 0
.   .   .   .   <VAR> dirvec
.   <IN>
.   <LET> t ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> tmin
.   .   .   <INT> 0
.   <IN>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <VAR> t
.   .   .   .   <FLOAT> -0.1
.   <THEN>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <FLOAT> 100000000.
.   .   .   .   <VAR> t
.   <ELSE>
.   .   <BOOL> false
<IN>
<LETREC> solve_each_element_fast ------ Type :  Fun ( args = ( Int  Array ( Int )  Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) -> exp = ( Unit ) ) 
.   <ARGS> iand_ofs, and_group, dirvec,  </ARGS>
.   <LET> vec ------ Type :  Array ( Float ) 
.   .   <APP> 
.   .   .   <VAR> d_vec
.   .   .   <ARGS> 
.   .   .   .   <VAR> dirvec
.   <IN>
.   <LET> iobj ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> and_group
.   .   .   <VAR> iand_ofs
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> iobj
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <UNIT> 
.   <ELSE>
.   .   <LET> t0 ------ Type :  Int 
.   .   .   <APP> 
.   .   .   .   <VAR> solver_fast2
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> iobj
.   .   .   .   .   <VAR> dirvec
.   .   <IN>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> t0
.   .   .   .   .   <INT> 0
.   .   <THEN>
.   .   .   <LET> t0p ------ Type :  Float 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   <INT> 0
.   .   .   <IN>
.   .   .   <LET> Tu117 ------ Type :  Unit 
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <VAR> t0p
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   <THEN>
.   .   .   .   .   <IF>
.   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> tmin
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <VAR> t0p
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <LET> t ------ Type :  Float 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <VAR> t0p
.   .   .   .   .   .   .   .   <FLOAT> 0.01
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <LET> q0 ------ Type :  Float 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> startp_fast
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <LET> q1 ------ Type :  Float 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> startp_fast
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <LET> q2 ------ Type :  Float 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> vec
.   .   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> startp_fast
.   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> check_all_inside
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> and_group
.   .   .   .   .   .   .   .   .   <VAR> q0
.   .   .   .   .   .   .   .   .   <VAR> q1
.   .   .   .   .   .   .   .   .   <VAR> q2
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <LET> Tu116 ------ Type :  Unit 
.   .   .   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   .   .   <VAR> tmin
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   <IN>
.   .   .   .   .   .   .   <LET> Tu115 ------ Type :  Unit 
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> vecset
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> intersection_point
.   .   .   .   .   .   .   .   .   .   <VAR> q0
.   .   .   .   .   .   .   .   .   .   <VAR> q1
.   .   .   .   .   .   .   .   .   .   <VAR> q2
.   .   .   .   .   .   .   <IN>
.   .   .   .   .   .   .   <LET> Tu114 ------ Type :  Unit 
.   .   .   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   .   .   <VAR> intersected_object_id
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <VAR> iobj
.   .   .   .   .   .   .   <IN>
.   .   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   .   <VAR> intsec_rectside
.   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <VAR> t0
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <UNIT> 
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <UNIT> 
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   .   <IN>
.   .   .   <APP> 
.   .   .   .   <VAR> solve_each_element_fast
.   .   .   .   <ARGS> 
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> iand_ofs
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> and_group
.   .   .   .   .   <VAR> dirvec
.   .   <ELSE>
.   .   .   <IF>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_isinvert
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> objects
.   .   .   .   .   .   .   <VAR> iobj
.   .   .   <THEN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> solve_each_element_fast
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   <VAR> iand_ofs
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> and_group
.   .   .   .   .   .   <VAR> dirvec
.   .   .   <ELSE>
.   .   .   .   <UNIT> 
<IN>
<LETREC> solve_one_or_network_fast ------ Type :  Fun ( args = ( Int  Array ( Int )  Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) -> exp = ( Unit ) ) 
.   <ARGS> ofs, or_group, dirvec,  </ARGS>
.   <LET> head ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> or_group
.   .   .   <VAR> ofs
.   <IN>
.   <IF>
.   .   <NOT> 
.   .   .   <EQ> 
.   .   .   .   <VAR> head
.   .   .   .   <NEG> 
.   .   .   .   .   <INT> 1
.   <THEN>
.   .   <LET> and_group ------ Type :  Array ( Int ) 
.   .   .   <GET> 
.   .   .   .   <VAR> and_net
.   .   .   .   <VAR> head
.   .   <IN>
.   .   <LET> Tu118 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> solve_each_element_fast
.   .   .   .   <ARGS> 
.   .   .   .   .   <INT> 0
.   .   .   .   .   <VAR> and_group
.   .   .   .   .   <VAR> dirvec
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> solve_one_or_network_fast
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> ofs
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> or_group
.   .   .   .   <VAR> dirvec
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> trace_or_matrix_fast ------ Type :  Fun ( args = ( Int  Array ( Array ( Int ) )  Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) -> exp = ( Unit ) ) 
.   <ARGS> ofs, or_network, dirvec,  </ARGS>
.   <LET> head ------ Type :  Array ( Int ) 
.   .   <GET> 
.   .   .   <VAR> or_network
.   .   .   <VAR> ofs
.   <IN>
.   <LET> range_primitive ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> head
.   .   .   <INT> 0
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> range_primitive
.   .   .   <NEG> 
.   .   .   .   <INT> 1
.   <THEN>
.   .   <UNIT> 
.   <ELSE>
.   .   <LET> Tu119 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> range_primitive
.   .   .   .   .   <INT> 99
.   .   .   <THEN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> solve_one_or_network_fast
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> head
.   .   .   .   .   .   <VAR> dirvec
.   .   .   <ELSE>
.   .   .   .   <LET> t ------ Type :  Int 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> solver_fast2
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> range_primitive
.   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   <IN>
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   <VAR> t
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   <THEN>
.   .   .   .   .   <LET> tp ------ Type :  Float 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> solver_dist
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   <IN>
.   .   .   .   .   <IF>
.   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> tmin
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <VAR> tp
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> solve_one_or_network_fast
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <VAR> head
.   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <UNIT> 
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> trace_or_matrix_fast
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> ofs
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> or_network
.   .   .   .   <VAR> dirvec
<IN>
<LETREC> judge_intersection_fast ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) -> exp = ( Bool ) ) 
.   <ARGS> dirvec,  </ARGS>
.   <LET> Tu121 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> tmin
.   .   .   <INT> 0
.   .   .   <FLOAT> 1000000000.
.   <IN>
.   <LET> Tu120 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> trace_or_matrix_fast
.   .   .   <ARGS> 
.   .   .   .   <INT> 0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> or_net
.   .   .   .   .   <INT> 0
.   .   .   .   <VAR> dirvec
.   <IN>
.   <LET> t ------ Type :  Float 
.   .   <GET> 
.   .   .   <VAR> tmin
.   .   .   <INT> 0
.   <IN>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <VAR> t
.   .   .   .   <FLOAT> -0.1
.   <THEN>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <FLOAT> 100000000.
.   .   .   .   <VAR> t
.   <ELSE>
.   .   <BOOL> false
<IN>
<LETREC> get_nvector_rect ------ Type :  Fun ( args = ( Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> dirvec,  </ARGS>
.   <LET> rectside ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> intsec_rectside
.   .   .   <INT> 0
.   <IN>
.   <LET> Tu122 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> vecbzero
.   .   .   <ARGS> 
.   .   .   .   <VAR> nvector
.   <IN>
.   <PUT> 
.   .   <VAR> nvector
.   .   <SUB> 
.   .   .   <VAR> rectside
.   .   .   <INT> 1
.   .   <FNEG> 
.   .   .   <APP> 
.   .   .   .   <VAR> sgn
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   <SUB> 
.   .   .   .   .   .   .   <VAR> rectside
.   .   .   .   .   .   .   <INT> 1
<IN>
<LETREC> get_nvector_plane ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Unit ) ) 
.   <ARGS> m,  </ARGS>
.   <LET> Tu124 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> nvector
.   .   .   <INT> 0
.   .   .   <FNEG> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   <IN>
.   <LET> Tu123 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> nvector
.   .   .   <INT> 1
.   .   .   <FNEG> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   <IN>
.   <PUT> 
.   .   <VAR> nvector
.   .   <INT> 2
.   .   <FNEG> 
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_c
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
<IN>
<LETREC> get_nvector_second ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Unit ) ) 
.   <ARGS> m,  </ARGS>
.   <LET> p0 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> intersection_point
.   .   .   .   <INT> 0
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_x
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> p1 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> intersection_point
.   .   .   .   <INT> 1
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_y
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> p2 ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <GET> 
.   .   .   .   <VAR> intersection_point
.   .   .   .   <INT> 2
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_z
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> d0 ------ Type :  Float 
.   .   <FMUL> 
.   .   .   <VAR> p0
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_a
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> d1 ------ Type :  Float 
.   .   <FMUL> 
.   .   .   <VAR> p1
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_b
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> d2 ------ Type :  Float 
.   .   <FMUL> 
.   .   .   <VAR> p2
.   .   .   <APP> 
.   .   .   .   <VAR> o_param_c
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> Tu129 ------ Type :  Unit 
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_isrot
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   .   .   .   <INT> 0
.   .   <THEN>
.   .   .   <LET> Tu126 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> nvector
.   .   .   .   .   <INT> 0
.   .   .   .   .   <VAR> d0
.   .   .   <IN>
.   .   .   <LET> Tu125 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> nvector
.   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> d1
.   .   .   <IN>
.   .   .   <PUT> 
.   .   .   .   <VAR> nvector
.   .   .   .   <INT> 2
.   .   .   .   <VAR> d2
.   .   <ELSE>
.   .   .   <LET> Tu128 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> nvector
.   .   .   .   .   <INT> 0
.   .   .   .   .   <FADD> 
.   .   .   .   .   .   <VAR> d0
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> p1
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_param_r3
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> p2
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_param_r2
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <FLOAT> 0.5
.   .   .   <IN>
.   .   .   <LET> Tu127 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> nvector
.   .   .   .   .   <INT> 1
.   .   .   .   .   <FADD> 
.   .   .   .   .   .   <VAR> d1
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> p0
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_param_r3
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> p2
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> o_param_r1
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <FLOAT> 0.5
.   .   .   <IN>
.   .   .   <PUT> 
.   .   .   .   <VAR> nvector
.   .   .   .   <INT> 2
.   .   .   .   <FADD> 
.   .   .   .   .   <VAR> d2
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> p0
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_r2
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> p1
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_r1
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   <FLOAT> 0.5
.   <IN>
.   <APP> 
.   .   <VAR> vecunit_sgn
.   .   <ARGS> 
.   .   .   <VAR> nvector
.   .   .   <APP> 
.   .   .   .   <VAR> o_isinvert
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
<IN>
<LETREC> get_nvector ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> m, dirvec,  </ARGS>
.   <LET> m_shape ------ Type :  Int 
.   .   <APP> 
.   .   .   <VAR> o_form
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> m_shape
.   .   .   <INT> 1
.   <THEN>
.   .   <APP> 
.   .   .   <VAR> get_nvector_rect
.   .   .   <ARGS> 
.   .   .   .   <VAR> dirvec
.   <ELSE>
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <VAR> m_shape
.   .   .   .   <INT> 2
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> get_nvector_plane
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   .   <ELSE>
.   .   .   <APP> 
.   .   .   .   <VAR> get_nvector_second
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
<IN>
<LETREC> utexture ------ Type :  Fun ( args = ( Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> m, p,  </ARGS>
.   <LET> m_tex ------ Type :  Int 
.   .   <APP> 
.   .   .   <VAR> o_texturetype
.   .   .   <ARGS> 
.   .   .   .   <VAR> m
.   <IN>
.   <LET> Tu134 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> texture_color
.   .   .   <INT> 0
.   .   .   <APP> 
.   .   .   .   <VAR> o_color_red
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> Tu133 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> texture_color
.   .   .   <INT> 1
.   .   .   <APP> 
.   .   .   .   <VAR> o_color_green
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <LET> Tu132 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> texture_color
.   .   .   <INT> 2
.   .   .   <APP> 
.   .   .   .   <VAR> o_color_blue
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> m
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <VAR> m_tex
.   .   .   <INT> 1
.   <THEN>
.   .   <LET> w1 ------ Type :  Float 
.   .   .   <FSUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> p
.   .   .   .   .   <INT> 0
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_x
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   .   <IN>
.   .   <LET> flag1 ------ Type :  Bool 
.   .   .   <LET> d1 ------ Type :  Float 
.   .   .   .   <FMUL> 
.   .   .   .   .   <Floor> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   <FLOAT> 0.05
.   .   .   .   .   <FLOAT> 20.
.   .   .   <IN>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <FLOAT> 10.
.   .   .   .   .   <FSUB> 
.   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   <VAR> d1
.   .   <IN>
.   .   <LET> w3 ------ Type :  Float 
.   .   .   <FSUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> p
.   .   .   .   .   <INT> 2
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_z
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> m
.   .   <IN>
.   .   <LET> flag2 ------ Type :  Bool 
.   .   .   <LET> d2 ------ Type :  Float 
.   .   .   .   <FMUL> 
.   .   .   .   .   <Floor> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> w3
.   .   .   .   .   .   .   <FLOAT> 0.05
.   .   .   .   .   <FLOAT> 20.
.   .   .   <IN>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <FLOAT> 10.
.   .   .   .   .   <FSUB> 
.   .   .   .   .   .   <VAR> w3
.   .   .   .   .   .   <VAR> d2
.   .   <IN>
.   .   <PUT> 
.   .   .   <VAR> texture_color
.   .   .   <INT> 1
.   .   .   <IF>
.   .   .   .   <VAR> flag1
.   .   .   <THEN>
.   .   .   .   <IF>
.   .   .   .   .   <VAR> flag2
.   .   .   .   <THEN>
.   .   .   .   .   <FLOAT> 255.
.   .   .   .   <ELSE>
.   .   .   .   .   <FLOAT> 0.
.   .   .   <ELSE>
.   .   .   .   <IF>
.   .   .   .   .   <VAR> flag2
.   .   .   .   <THEN>
.   .   .   .   .   <FLOAT> 0.
.   .   .   .   <ELSE>
.   .   .   .   .   <FLOAT> 255.
.   <ELSE>
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <VAR> m_tex
.   .   .   .   <INT> 2
.   .   <THEN>
.   .   .   <LET> w2 ------ Type :  Float 
.   .   .   .   <FMUL> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> sin
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <FLOAT> 0.25
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> sin
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <FLOAT> 0.25
.   .   .   <IN>
.   .   .   <LET> Tu130 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> texture_color
.   .   .   .   .   <INT> 0
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FLOAT> 255.
.   .   .   .   .   .   <VAR> w2
.   .   .   <IN>
.   .   .   <PUT> 
.   .   .   .   <VAR> texture_color
.   .   .   .   <INT> 1
.   .   .   .   <FMUL> 
.   .   .   .   .   <FLOAT> 255.
.   .   .   .   .   <FSUB> 
.   .   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   .   <VAR> w2
.   .   <ELSE>
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> m_tex
.   .   .   .   .   <INT> 3
.   .   .   <THEN>
.   .   .   .   <LET> w1 ------ Type :  Float 
.   .   .   .   .   <FSUB> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_param_x
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   <IN>
.   .   .   .   <LET> w3 ------ Type :  Float 
.   .   .   .   .   <FSUB> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_param_z
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   <IN>
.   .   .   .   <LET> w2 ------ Type :  Float 
.   .   .   .   .   <Sqrt> 
.   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> w3
.   .   .   .   .   .   .   .   .   <VAR> w3
.   .   .   .   .   .   .   <FLOAT> 10.
.   .   .   .   <IN>
.   .   .   .   <LET> w4 ------ Type :  Float 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   <VAR> w2
.   .   .   .   .   .   .   <Floor> 
.   .   .   .   .   .   .   .   <VAR> w2
.   .   .   .   .   .   <FLOAT> 3.1415927
.   .   .   .   <IN>
.   .   .   .   <LET> cws ------ Type :  Float 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> cos
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> w4
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> cos
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> w4
.   .   .   .   <IN>
.   .   .   .   <LET> Tu131 ------ Type :  Unit 
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> texture_color
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> cws
.   .   .   .   .   .   .   <FLOAT> 255.
.   .   .   .   <IN>
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> texture_color
.   .   .   .   .   <INT> 2
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   .   .   <VAR> cws
.   .   .   .   .   .   <FLOAT> 255.
.   .   .   <ELSE>
.   .   .   .   <IF>
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> m_tex
.   .   .   .   .   .   <INT> 4
.   .   .   .   <THEN>
.   .   .   .   .   <LET> w1 ------ Type :  Float 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_x
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <Sqrt> 
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> w3 ------ Type :  Float 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_z
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <Sqrt> 
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> w4 ------ Type :  Float 
.   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> w3
.   .   .   .   .   .   .   .   <VAR> w3
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> w7 ------ Type :  Float 
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   <FLOAT> 0.0001
.   .   .   .   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FLOAT> 15.
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <LET> w5 ------ Type :  Float 
.   .   .   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w3
.   .   .   .   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w3
.   .   .   .   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   .   .   <VAR> w3
.   .   .   .   .   .   .   .   .   .   <VAR> w1
.   .   .   .   .   .   .   <IN>
.   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> atan
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w5
.   .   .   .   .   .   .   .   .   <FLOAT> 30.
.   .   .   .   .   .   .   .   <FLOAT> 3.1415927
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> w9 ------ Type :  Float 
.   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   <VAR> w7
.   .   .   .   .   .   .   <Floor> 
.   .   .   .   .   .   .   .   <VAR> w7
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> w2 ------ Type :  Float 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_y
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   .   .   <Sqrt> 
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> m
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> w8 ------ Type :  Float 
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   <FLOAT> 0.0001
.   .   .   .   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w4
.   .   .   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w4
.   .   .   .   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   .   .   .   <VAR> w4
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FLOAT> 15.
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <LET> w6 ------ Type :  Float 
.   .   .   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w2
.   .   .   .   .   .   .   .   .   .   .   <VAR> w4
.   .   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w2
.   .   .   .   .   .   .   .   .   .   .   <VAR> w4
.   .   .   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   .   .   <VAR> w2
.   .   .   .   .   .   .   .   .   .   <VAR> w4
.   .   .   .   .   .   .   <IN>
.   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> atan
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> w6
.   .   .   .   .   .   .   .   .   <FLOAT> 30.
.   .   .   .   .   .   .   .   <FLOAT> 3.1415927
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> w10 ------ Type :  Float 
.   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   <VAR> w8
.   .   .   .   .   .   .   <Floor> 
.   .   .   .   .   .   .   .   <VAR> w8
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> w11 ------ Type :  Float 
.   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   <FLOAT> 0.15
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   .   .   <FLOAT> 0.5
.   .   .   .   .   .   .   .   .   .   <VAR> w9
.   .   .   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   .   .   <FLOAT> 0.5
.   .   .   .   .   .   .   .   .   .   <VAR> w9
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   .   <FLOAT> 0.5
.   .   .   .   .   .   .   .   .   <VAR> w10
.   .   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   .   <FLOAT> 0.5
.   .   .   .   .   .   .   .   .   <VAR> w10
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> w12 ------ Type :  Float 
.   .   .   .   .   .   <IF>
.   .   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   .   .   .   <VAR> w11
.   .   .   .   .   .   <THEN>
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <ELSE>
.   .   .   .   .   .   .   <VAR> w11
.   .   .   .   .   <IN>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> texture_color
.   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <FLOAT> 255.
.   .   .   .   .   .   .   .   <VAR> w12
.   .   .   .   .   .   .   <FLOAT> 0.3
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
<IN>
<LETREC> add_light ------ Type :  Fun ( args = ( Float  Float  Float ) -> exp = ( Unit ) ) 
.   <ARGS> bright, hilight, hilight_scale,  </ARGS>
.   <LET> Tu137 ------ Type :  Unit 
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <VAR> bright
.   .   .   .   .   <FLOAT> 0.
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> vecaccum
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> rgb
.   .   .   .   .   <VAR> bright
.   .   .   .   .   <VAR> texture_color
.   .   <ELSE>
.   .   .   <UNIT> 
.   <IN>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <VAR> hilight
.   .   .   .   <FLOAT> 0.
.   <THEN>
.   .   <LET> ihl ------ Type :  Float 
.   .   .   <FMUL> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> hilight
.   .   .   .   .   .   <VAR> hilight
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> hilight
.   .   .   .   .   .   <VAR> hilight
.   .   .   .   <VAR> hilight_scale
.   .   <IN>
.   .   <LET> Tu136 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> rgb
.   .   .   .   <INT> 0
.   .   .   .   <FADD> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> rgb
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <VAR> ihl
.   .   <IN>
.   .   <LET> Tu135 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> rgb
.   .   .   .   <INT> 1
.   .   .   .   <FADD> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> rgb
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> ihl
.   .   <IN>
.   .   <PUT> 
.   .   .   <VAR> rgb
.   .   .   <INT> 2
.   .   .   <FADD> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rgb
.   .   .   .   .   <INT> 2
.   .   .   .   <VAR> ihl
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> trace_reflections ------ Type :  Fun ( args = ( Int  Float  Float  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> index, diffuse, hilight_scale, dirvec,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> index
.   <THEN>
.   .   <LET> rinfo ------ Type :  Tuple ( Int  Tuple ( Array ( Float )  Array ( Array ( Float ) ) )  Float ) 
.   .   .   <GET> 
.   .   .   .   <VAR> reflections
.   .   .   .   <VAR> index
.   .   <IN>
.   .   <LET> dvec ------ Type :  Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) 
.   .   .   <APP> 
.   .   .   .   <VAR> r_dvec
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> rinfo
.   .   <IN>
.   .   <LET> Tu138 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> judge_intersection_fast
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> dvec
.   .   .   <THEN>
.   .   .   .   <LET> surface_id ------ Type :  Int 
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <SHIFT_INT_LEFT> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> intersected_object_id
.   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> intsec_rectside
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   <IN>
.   .   .   .   <IF>
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> surface_id
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> r_surface_id
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> rinfo
.   .   .   .   <THEN>
.   .   .   .   .   <IF>
.   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> shadow_check_one_or_matrix
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   .   <VAR> or_net
.   .   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <LET> p ------ Type :  Float 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> veciprod
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> nvector
.   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   <VAR> d_vec
.   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> dvec
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <LET> scale ------ Type :  Float 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> r_bright
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> rinfo
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <LET> bright ------ Type :  Float 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <VAR> scale
.   .   .   .   .   .   .   .   .   <VAR> diffuse
.   .   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <LET> hilight ------ Type :  Float 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <VAR> scale
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> veciprod
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   .   .   <VAR> d_vec
.   .   .   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   .   .   <VAR> dvec
.   .   .   .   .   .   <IN>
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> add_light
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> bright
.   .   .   .   .   .   .   .   <VAR> hilight
.   .   .   .   .   .   .   .   <VAR> hilight_scale
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <UNIT> 
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   .   <ELSE>
.   .   .   .   <UNIT> 
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> trace_reflections
.   .   .   <ARGS> 
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> diffuse
.   .   .   .   <VAR> hilight_scale
.   .   .   .   <VAR> dirvec
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> trace_ray ------ Type :  Fun ( args = ( Int  Float  Array ( Float )  Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) )  Float ) -> exp = ( Unit ) ) 
.   <ARGS> nref, energy, dirvec, pixel, dist,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <VAR> nref
.   .   .   <INT> 4
.   <THEN>
.   .   <LET> surface_ids ------ Type :  Array ( Int ) 
.   .   .   <APP> 
.   .   .   .   <VAR> p_surface_ids
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> pixel
.   .   <IN>
.   .   <IF>
.   .   .   <APP> 
.   .   .   .   <VAR> judge_intersection
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> dirvec
.   .   <THEN>
.   .   .   <LET> obj_id ------ Type :  Int 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> intersected_object_id
.   .   .   .   .   <INT> 0
.   .   .   <IN>
.   .   .   <LET> obj ------ Type :  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> objects
.   .   .   .   .   <VAR> obj_id
.   .   .   <IN>
.   .   .   <LET> m_surface ------ Type :  Int 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_reflectiontype
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> obj
.   .   .   <IN>
.   .   .   <LET> diffuse ------ Type :  Float 
.   .   .   .   <FMUL> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_diffuse
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> obj
.   .   .   .   .   <VAR> energy
.   .   .   <IN>
.   .   .   <LET> Tu152 ------ Type :  Unit 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> get_nvector
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> obj
.   .   .   .   .   .   <VAR> dirvec
.   .   .   <IN>
.   .   .   <LET> Tu151 ------ Type :  Unit 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> veccpy
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> startp
.   .   .   .   .   .   <VAR> intersection_point
.   .   .   <IN>
.   .   .   <LET> Tu150 ------ Type :  Unit 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> utexture
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> obj
.   .   .   .   .   .   <VAR> intersection_point
.   .   .   <IN>
.   .   .   <LET> Tu149 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> surface_ids
.   .   .   .   .   <VAR> nref
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <SHIFT_INT_LEFT> 
.   .   .   .   .   .   .   <VAR> obj_id
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> intsec_rectside
.   .   .   .   .   .   .   <INT> 0
.   .   .   <IN>
.   .   .   <LET> intersection_points ------ Type :  Array ( Array ( Float ) ) 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> p_intersection_points
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> pixel
.   .   .   <IN>
.   .   .   <LET> Tu148 ------ Type :  Unit 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> veccpy
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> intersection_points
.   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   <VAR> intersection_point
.   .   .   <IN>
.   .   .   <LET> calc_diffuse ------ Type :  Array ( Bool ) 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> p_calc_diffuse
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> pixel
.   .   .   <IN>
.   .   .   <LET> Tu147 ------ Type :  Unit 
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <FLOAT> 0.5
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_diffuse
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> obj
.   .   .   .   <THEN>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> calc_diffuse
.   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   <BOOL> false
.   .   .   .   <ELSE>
.   .   .   .   .   <LET> Tu141 ------ Type :  Unit 
.   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   <VAR> calc_diffuse
.   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   .   <BOOL> true
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> energya ------ Type :  Array ( Array ( Float ) ) 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> p_energy
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> pixel
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> Tu140 ------ Type :  Unit 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> veccpy
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> energya
.   .   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   .   .   <VAR> texture_color
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> Tu139 ------ Type :  Unit 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> vecscale
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> energya
.   .   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   .   .   .   .   .   <FLOAT> 256.
.   .   .   .   .   .   .   .   .   <VAR> diffuse
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> nvectors ------ Type :  Array ( Array ( Float ) ) 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> p_nvectors
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> pixel
.   .   .   .   .   <IN>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> veccpy
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> nvectors
.   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   .   <VAR> nvector
.   .   .   <IN>
.   .   .   <LET> w ------ Type :  Float 
.   .   .   .   <FMUL> 
.   .   .   .   .   <FLOAT> -2.
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> veciprod
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   <VAR> nvector
.   .   .   <IN>
.   .   .   <LET> Tu146 ------ Type :  Unit 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> vecaccum
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   <VAR> w
.   .   .   .   .   .   <VAR> nvector
.   .   .   <IN>
.   .   .   <LET> hilight_scale ------ Type :  Float 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> energy
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_hilight
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> obj
.   .   .   <IN>
.   .   .   <LET> Tu145 ------ Type :  Unit 
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> shadow_check_one_or_matrix
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> or_net
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   <THEN>
.   .   .   .   .   <LET> bright ------ Type :  Float 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> veciprod
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> nvector
.   .   .   .   .   .   .   .   .   .   <VAR> light
.   .   .   .   .   .   .   <VAR> diffuse
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> hilight ------ Type :  Float 
.   .   .   .   .   .   <FNEG> 
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> veciprod
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   .   <VAR> light
.   .   .   .   .   <IN>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> add_light
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> bright
.   .   .   .   .   .   .   <VAR> hilight
.   .   .   .   .   .   .   <VAR> hilight_scale
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   .   <IN>
.   .   .   <LET> Tu144 ------ Type :  Unit 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> setup_startp
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> intersection_point
.   .   .   <IN>
.   .   .   <LET> Tu143 ------ Type :  Unit 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> trace_reflections
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <SUB> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> n_reflections
.   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> diffuse
.   .   .   .   .   .   <VAR> hilight_scale
.   .   .   .   .   .   <VAR> dirvec
.   .   .   <IN>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <VAR> energy
.   .   .   .   .   .   <FLOAT> 0.1
.   .   .   <THEN>
.   .   .   .   <LET> Tu142 ------ Type :  Unit 
.   .   .   .   .   <IF>
.   .   .   .   .   .   <NOT> 
.   .   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   .   <INT> 4
.   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   <VAR> surface_ids
.   .   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <NEG> 
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <UNIT> 
.   .   .   .   <IN>
.   .   .   .   <IF>
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> m_surface
.   .   .   .   .   .   <INT> 2
.   .   .   .   <THEN>
.   .   .   .   .   <LET> energy2 ------ Type :  Float 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> energy
.   .   .   .   .   .   .   <FSUB> 
.   .   .   .   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   .   <VAR> o_diffuse
.   .   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   .   <VAR> obj
.   .   .   .   .   <IN>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> trace_ray
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <VAR> energy2
.   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   <VAR> pixel
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <VAR> dist
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> tmin
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   .   <ELSE>
.   .   .   .   <UNIT> 
.   .   <ELSE>
.   .   .   <LET> Tu155 ------ Type :  Unit 
.   .   .   .   <PUT> 
.   .   .   .   .   <VAR> surface_ids
.   .   .   .   .   <VAR> nref
.   .   .   .   .   <NEG> 
.   .   .   .   .   .   <INT> 1
.   .   .   <IN>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   <INT> 0
.   .   .   <THEN>
.   .   .   .   <LET> hl ------ Type :  Float 
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> veciprod
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> dirvec
.   .   .   .   .   .   .   .   <VAR> light
.   .   .   .   <IN>
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <VAR> hl
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   <THEN>
.   .   .   .   .   <LET> ihl ------ Type :  Float 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   .   .   .   <VAR> hl
.   .   .   .   .   .   .   .   .   .   <VAR> hl
.   .   .   .   .   .   .   .   .   <VAR> hl
.   .   .   .   .   .   .   .   <VAR> energy
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> beam
.   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> Tu154 ------ Type :  Unit 
.   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   <VAR> rgb
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> rgb
.   .   .   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   .   .   <VAR> ihl
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> Tu153 ------ Type :  Unit 
.   .   .   .   .   .   <PUT> 
.   .   .   .   .   .   .   <VAR> rgb
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> rgb
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <VAR> ihl
.   .   .   .   .   <IN>
.   .   .   .   .   <PUT> 
.   .   .   .   .   .   <VAR> rgb
.   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   <FADD> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> rgb
.   .   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   .   .   <VAR> ihl
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   .   <ELSE>
.   .   .   .   <UNIT> 
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> trace_diffuse_ray ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) )  Float ) -> exp = ( Unit ) ) 
.   <ARGS> dirvec, energy,  </ARGS>
.   <IF>
.   .   <APP> 
.   .   .   <VAR> judge_intersection_fast
.   .   .   <ARGS> 
.   .   .   .   <VAR> dirvec
.   <THEN>
.   .   <LET> obj ------ Type :  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) 
.   .   .   <GET> 
.   .   .   .   <VAR> objects
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> intersected_object_id
.   .   .   .   .   <INT> 0
.   .   <IN>
.   .   <LET> Tu157 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> get_nvector
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> obj
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> d_vec
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> dirvec
.   .   <IN>
.   .   <LET> Tu156 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> utexture
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> obj
.   .   .   .   .   <VAR> intersection_point
.   .   <IN>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> shadow_check_one_or_matrix
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> or_net
.   .   .   .   .   .   .   <INT> 0
.   .   <THEN>
.   .   .   <LET> br ------ Type :  Float 
.   .   .   .   <FNEG> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> veciprod
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> nvector
.   .   .   .   .   .   .   <VAR> light
.   .   .   <IN>
.   .   .   <LET> bright ------ Type :  Float 
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <VAR> br
.   .   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   <THEN>
.   .   .   .   .   <VAR> br
.   .   .   .   <ELSE>
.   .   .   .   .   <FLOAT> 0.
.   .   .   <IN>
.   .   .   <APP> 
.   .   .   .   <VAR> vecaccum
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> diffuse_ray
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> energy
.   .   .   .   .   .   .   <VAR> bright
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_diffuse
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> obj
.   .   .   .   .   <VAR> texture_color
.   .   <ELSE>
.   .   .   <UNIT> 
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> iter_trace_diffuse_rays ------ Type :  Fun ( args = ( Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) )  Array ( Float )  Array ( Float )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> dirvec_group, nvector, org, index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> index
.   <THEN>
.   .   <LET> p ------ Type :  Float 
.   .   .   <APP> 
.   .   .   .   <VAR> veciprod
.   .   .   .   <ARGS> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> d_vec
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dirvec_group
.   .   .   .   .   .   .   .   <VAR> index
.   .   .   .   .   <VAR> nvector
.   .   <IN>
.   .   <LET> Tu158 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   .   <VAR> p
.   .   .   <THEN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> trace_diffuse_ray
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dirvec_group
.   .   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   .   <FLOAT> -150.
.   .   .   <ELSE>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> trace_diffuse_ray
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dirvec_group
.   .   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   <FDIV> 
.   .   .   .   .   .   .   <VAR> p
.   .   .   .   .   .   .   <FLOAT> 150.
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> iter_trace_diffuse_rays
.   .   .   <ARGS> 
.   .   .   .   <VAR> dirvec_group
.   .   .   .   <VAR> nvector
.   .   .   .   <VAR> org
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 2
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> trace_diffuse_rays ------ Type :  Fun ( args = ( Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) )  Array ( Float )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> dirvec_group, nvector, org,  </ARGS>
.   <LET> Tu159 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> setup_startp
.   .   .   <ARGS> 
.   .   .   .   <VAR> org
.   <IN>
.   <APP> 
.   .   <VAR> iter_trace_diffuse_rays
.   .   <ARGS> 
.   .   .   <VAR> dirvec_group
.   .   .   <VAR> nvector
.   .   .   <VAR> org
.   .   .   <INT> 118
<IN>
<LETREC> trace_diffuse_ray_80percent ------ Type :  Fun ( args = ( Int  Array ( Float )  Array ( Float ) ) -> exp = ( Unit ) ) 
.   <ARGS> group_id, nvector, org,  </ARGS>
.   <LET> Tu163 ------ Type :  Unit 
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> group_id
.   .   .   .   .   <INT> 0
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> trace_diffuse_rays
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvecs
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <VAR> nvector
.   .   .   .   .   <VAR> org
.   .   <ELSE>
.   .   .   <UNIT> 
.   <IN>
.   <LET> Tu162 ------ Type :  Unit 
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> group_id
.   .   .   .   .   <INT> 1
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> trace_diffuse_rays
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvecs
.   .   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> nvector
.   .   .   .   .   <VAR> org
.   .   <ELSE>
.   .   .   <UNIT> 
.   <IN>
.   <LET> Tu161 ------ Type :  Unit 
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> group_id
.   .   .   .   .   <INT> 2
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> trace_diffuse_rays
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvecs
.   .   .   .   .   .   <INT> 2
.   .   .   .   .   <VAR> nvector
.   .   .   .   .   <VAR> org
.   .   <ELSE>
.   .   .   <UNIT> 
.   <IN>
.   <LET> Tu160 ------ Type :  Unit 
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <EQ> 
.   .   .   .   .   <VAR> group_id
.   .   .   .   .   <INT> 3
.   .   <THEN>
.   .   .   <APP> 
.   .   .   .   <VAR> trace_diffuse_rays
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvecs
.   .   .   .   .   .   <INT> 3
.   .   .   .   .   <VAR> nvector
.   .   .   .   .   <VAR> org
.   .   <ELSE>
.   .   .   <UNIT> 
.   <IN>
.   <IF>
.   .   <NOT> 
.   .   .   <EQ> 
.   .   .   .   <VAR> group_id
.   .   .   .   <INT> 4
.   <THEN>
.   .   <APP> 
.   .   .   <VAR> trace_diffuse_rays
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> dirvecs
.   .   .   .   .   <INT> 4
.   .   .   .   <VAR> nvector
.   .   .   .   <VAR> org
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> calc_diffuse_using_1point ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> pixel, nref,  </ARGS>
.   <LET> ray20p ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_received_ray_20percent
.   .   .   <ARGS> 
.   .   .   .   <VAR> pixel
.   <IN>
.   <LET> nvectors ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_nvectors
.   .   .   <ARGS> 
.   .   .   .   <VAR> pixel
.   <IN>
.   <LET> intersection_points ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_intersection_points
.   .   .   <ARGS> 
.   .   .   .   <VAR> pixel
.   <IN>
.   <LET> energya ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_energy
.   .   .   <ARGS> 
.   .   .   .   <VAR> pixel
.   <IN>
.   <LET> Tu165 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> veccpy
.   .   .   <ARGS> 
.   .   .   .   <VAR> diffuse_ray
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> ray20p
.   .   .   .   .   <VAR> nref
.   <IN>
.   <LET> Tu164 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> trace_diffuse_ray_80percent
.   .   .   <ARGS> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> p_group_id
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> pixel
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> nvectors
.   .   .   .   .   <VAR> nref
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> intersection_points
.   .   .   .   .   <VAR> nref
.   <IN>
.   <APP> 
.   .   <VAR> vecaccumv
.   .   <ARGS> 
.   .   .   <VAR> rgb
.   .   .   <GET> 
.   .   .   .   <VAR> energya
.   .   .   .   <VAR> nref
.   .   .   <VAR> diffuse_ray
<IN>
<LETREC> calc_diffuse_using_5points ------ Type :  Fun ( args = ( Int  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> x, prev, cur, next, nref,  </ARGS>
.   <LET> r_up ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_received_ray_20percent
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> prev
.   .   .   .   .   <VAR> x
.   <IN>
.   <LET> r_left ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_received_ray_20percent
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> cur
.   .   .   .   .   <SUB> 
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <INT> 1
.   <IN>
.   <LET> r_center ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_received_ray_20percent
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> cur
.   .   .   .   .   <VAR> x
.   <IN>
.   <LET> r_right ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_received_ray_20percent
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> cur
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <INT> 1
.   <IN>
.   <LET> r_down ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_received_ray_20percent
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> next
.   .   .   .   .   <VAR> x
.   <IN>
.   <LET> Tu170 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> veccpy
.   .   .   <ARGS> 
.   .   .   .   <VAR> diffuse_ray
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> r_up
.   .   .   .   .   <VAR> nref
.   <IN>
.   <LET> Tu169 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> vecadd
.   .   .   <ARGS> 
.   .   .   .   <VAR> diffuse_ray
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> r_left
.   .   .   .   .   <VAR> nref
.   <IN>
.   <LET> Tu168 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> vecadd
.   .   .   <ARGS> 
.   .   .   .   <VAR> diffuse_ray
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> r_center
.   .   .   .   .   <VAR> nref
.   <IN>
.   <LET> Tu167 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> vecadd
.   .   .   <ARGS> 
.   .   .   .   <VAR> diffuse_ray
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> r_right
.   .   .   .   .   <VAR> nref
.   <IN>
.   <LET> Tu166 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> vecadd
.   .   .   <ARGS> 
.   .   .   .   <VAR> diffuse_ray
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> r_down
.   .   .   .   .   <VAR> nref
.   <IN>
.   <LET> energya ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> p_energy
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> cur
.   .   .   .   .   <VAR> x
.   <IN>
.   <APP> 
.   .   <VAR> vecaccumv
.   .   <ARGS> 
.   .   .   <VAR> rgb
.   .   .   <GET> 
.   .   .   .   <VAR> energya
.   .   .   .   <VAR> nref
.   .   .   <VAR> diffuse_ray
<IN>
<LETREC> do_without_neighbors ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> pixel, nref,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <VAR> nref
.   .   .   <INT> 4
.   <THEN>
.   .   <LET> surface_ids ------ Type :  Array ( Int ) 
.   .   .   <APP> 
.   .   .   .   <VAR> p_surface_ids
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> pixel
.   .   <IN>
.   .   <IF>
.   .   .   <LE> 
.   .   .   .   <INT> 0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> surface_ids
.   .   .   .   .   <VAR> nref
.   .   <THEN>
.   .   .   <LET> calc_diffuse ------ Type :  Array ( Bool ) 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> p_calc_diffuse
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> pixel
.   .   .   <IN>
.   .   .   <LET> Tu171 ------ Type :  Unit 
.   .   .   .   <IF>
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> calc_diffuse
.   .   .   .   .   .   <VAR> nref
.   .   .   .   <THEN>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> calc_diffuse_using_1point
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> pixel
.   .   .   .   .   .   .   <VAR> nref
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   .   <IN>
.   .   .   <APP> 
.   .   .   .   <VAR> do_without_neighbors
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> pixel
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   <INT> 1
.   .   <ELSE>
.   .   .   <UNIT> 
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> neighbors_exist ------ Type :  Fun ( args = ( Int  Int  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) ) -> exp = ( Bool ) ) 
.   <ARGS> x, y, next,  </ARGS>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> image_size
.   .   .   .   .   <INT> 1
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> y
.   .   .   .   .   <INT> 1
.   <THEN>
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <VAR> y
.   .   .   .   .   <INT> 0
.   .   <THEN>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> image_size
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   .   <INT> 1
.   .   .   <THEN>
.   .   .   .   <IF>
.   .   .   .   .   <NOT> 
.   .   .   .   .   .   <LE> 
.   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   <THEN>
.   .   .   .   .   <BOOL> true
.   .   .   .   <ELSE>
.   .   .   .   .   <BOOL> false
.   .   .   <ELSE>
.   .   .   .   <BOOL> false
.   .   <ELSE>
.   .   .   <BOOL> false
.   <ELSE>
.   .   <BOOL> false
<IN>
<LETREC> get_surface_id ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) )  Int ) -> exp = ( Int ) ) 
.   <ARGS> pixel, index,  </ARGS>
.   <LET> surface_ids ------ Type :  Array ( Int ) 
.   .   <APP> 
.   .   .   <VAR> p_surface_ids
.   .   .   <ARGS> 
.   .   .   .   <VAR> pixel
.   <IN>
.   <GET> 
.   .   <VAR> surface_ids
.   .   <VAR> index
<IN>
<LETREC> neighbors_are_available ------ Type :  Fun ( args = ( Int  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Int ) -> exp = ( Bool ) ) 
.   <ARGS> x, prev, cur, next, nref,  </ARGS>
.   <LET> sid_center ------ Type :  Int 
.   .   <APP> 
.   .   .   <VAR> get_surface_id
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> cur
.   .   .   .   .   <VAR> x
.   .   .   .   <VAR> nref
.   <IN>
.   <IF>
.   .   <EQ> 
.   .   .   <APP> 
.   .   .   .   <VAR> get_surface_id
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> prev
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   <VAR> nref
.   .   .   <VAR> sid_center
.   <THEN>
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> get_surface_id
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> next
.   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <VAR> nref
.   .   .   .   <VAR> sid_center
.   .   <THEN>
.   .   .   <IF>
.   .   .   .   <EQ> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> get_surface_id
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> cur
.   .   .   .   .   .   .   .   <SUB> 
.   .   .   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   <VAR> sid_center
.   .   .   <THEN>
.   .   .   .   <IF>
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> get_surface_id
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> cur
.   .   .   .   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   <VAR> sid_center
.   .   .   .   <THEN>
.   .   .   .   .   <BOOL> true
.   .   .   .   <ELSE>
.   .   .   .   .   <BOOL> false
.   .   .   <ELSE>
.   .   .   .   <BOOL> false
.   .   <ELSE>
.   .   .   <BOOL> false
.   <ELSE>
.   .   <BOOL> false
<IN>
<LETREC> try_exploit_neighbors ------ Type :  Fun ( args = ( Int  Int  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> x, y, prev, cur, next, nref,  </ARGS>
.   <LET> pixel ------ Type :  Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) 
.   .   <GET> 
.   .   .   <VAR> cur
.   .   .   <VAR> x
.   <IN>
.   <IF>
.   .   <LE> 
.   .   .   <VAR> nref
.   .   .   <INT> 4
.   <THEN>
.   .   <IF>
.   .   .   <LE> 
.   .   .   .   <INT> 0
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> get_surface_id
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> pixel
.   .   .   .   .   .   <VAR> nref
.   .   <THEN>
.   .   .   <IF>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> neighbors_are_available
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <VAR> prev
.   .   .   .   .   .   <VAR> cur
.   .   .   .   .   .   <VAR> next
.   .   .   .   .   .   <VAR> nref
.   .   .   <THEN>
.   .   .   .   <LET> calc_diffuse ------ Type :  Array ( Bool ) 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> p_calc_diffuse
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> pixel
.   .   .   .   <IN>
.   .   .   .   <LET> Tu172 ------ Type :  Unit 
.   .   .   .   .   <IF>
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> calc_diffuse
.   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> calc_diffuse_using_5points
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   .   .   <VAR> prev
.   .   .   .   .   .   .   .   <VAR> cur
.   .   .   .   .   .   .   .   <VAR> next
.   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <UNIT> 
.   .   .   .   <IN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> try_exploit_neighbors
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <VAR> y
.   .   .   .   .   .   <VAR> prev
.   .   .   .   .   .   <VAR> cur
.   .   .   .   .   .   <VAR> next
.   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   .   <INT> 1
.   .   .   <ELSE>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> do_without_neighbors
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> cur
.   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <VAR> nref
.   .   <ELSE>
.   .   .   <UNIT> 
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> write_ppm_header ------ Type :  Fun ( args = ( Unit ) -> exp = ( Unit ) ) 
.   <ARGS> Tu173,  </ARGS>
.   <LET> Tu181 ------ Type :  Unit 
.   .   <Out> 
.   .   .   <INT> 80
.   <IN>
.   <LET> Tu180 ------ Type :  Unit 
.   .   <Out> 
.   .   .   <ADD> 
.   .   .   .   <INT> 48
.   .   .   .   <INT> 3
.   <IN>
.   <LET> Tu179 ------ Type :  Unit 
.   .   <Out> 
.   .   .   <INT> 10
.   <IN>
.   <LET> Tu178 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> print_int
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> image_size
.   .   .   .   .   <INT> 0
.   <IN>
.   <LET> Tu177 ------ Type :  Unit 
.   .   <Out> 
.   .   .   <INT> 32
.   <IN>
.   <LET> Tu176 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> print_int
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> image_size
.   .   .   .   .   <INT> 1
.   <IN>
.   <LET> Tu175 ------ Type :  Unit 
.   .   <Out> 
.   .   .   <INT> 32
.   <IN>
.   <LET> Tu174 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> print_int
.   .   .   <ARGS> 
.   .   .   .   <INT> 255
.   <IN>
.   <Out> 
.   .   <INT> 10
<IN>
<LETREC> write_rgb_element ------ Type :  Fun ( args = ( Float ) -> exp = ( Unit ) ) 
.   <ARGS> x,  </ARGS>
.   <LET> ix ------ Type :  Int 
.   .   <FtoI> 
.   .   .   <VAR> x
.   <IN>
.   <LET> elem ------ Type :  Int 
.   .   <IF>
.   .   .   <NOT> 
.   .   .   .   <LE> 
.   .   .   .   .   <VAR> ix
.   .   .   .   .   <INT> 255
.   .   <THEN>
.   .   .   <INT> 255
.   .   <ELSE>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   .   <VAR> ix
.   .   .   <THEN>
.   .   .   .   <INT> 0
.   .   .   <ELSE>
.   .   .   .   <VAR> ix
.   <IN>
.   <APP> 
.   .   <VAR> print_int
.   .   <ARGS> 
.   .   .   <VAR> elem
<IN>
<LETREC> write_rgb ------ Type :  Fun ( args = ( Unit ) -> exp = ( Unit ) ) 
.   <ARGS> Tu182,  </ARGS>
.   <LET> Tu187 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> write_rgb_element
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rgb
.   .   .   .   .   <INT> 0
.   <IN>
.   <LET> Tu186 ------ Type :  Unit 
.   .   <Out> 
.   .   .   <INT> 32
.   <IN>
.   <LET> Tu185 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> write_rgb_element
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rgb
.   .   .   .   .   <INT> 1
.   <IN>
.   <LET> Tu184 ------ Type :  Unit 
.   .   <Out> 
.   .   .   <INT> 32
.   <IN>
.   <LET> Tu183 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> write_rgb_element
.   .   .   <ARGS> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> rgb
.   .   .   .   .   <INT> 2
.   <IN>
.   <Out> 
.   .   <INT> 10
<IN>
<LETREC> pretrace_diffuse_rays ------ Type :  Fun ( args = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> pixel, nref,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <VAR> nref
.   .   .   <INT> 4
.   <THEN>
.   .   <LET> sid ------ Type :  Int 
.   .   .   <APP> 
.   .   .   .   <VAR> get_surface_id
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> pixel
.   .   .   .   .   <VAR> nref
.   .   <IN>
.   .   <IF>
.   .   .   <LE> 
.   .   .   .   <INT> 0
.   .   .   .   <VAR> sid
.   .   <THEN>
.   .   .   <LET> calc_diffuse ------ Type :  Array ( Bool ) 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> p_calc_diffuse
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> pixel
.   .   .   <IN>
.   .   .   <LET> Tu190 ------ Type :  Unit 
.   .   .   .   <IF>
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> calc_diffuse
.   .   .   .   .   .   <VAR> nref
.   .   .   .   <THEN>
.   .   .   .   .   <LET> group_id ------ Type :  Int 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> p_group_id
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> pixel
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> Tu189 ------ Type :  Unit 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> vecbzero
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> diffuse_ray
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> nvectors ------ Type :  Array ( Array ( Float ) ) 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> p_nvectors
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> pixel
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> intersection_points ------ Type :  Array ( Array ( Float ) ) 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> p_intersection_points
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> pixel
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> Tu188 ------ Type :  Unit 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> trace_diffuse_rays
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> dirvecs
.   .   .   .   .   .   .   .   .   <VAR> group_id
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> nvectors
.   .   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   .   <VAR> intersection_points
.   .   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   <IN>
.   .   .   .   .   <LET> ray20p ------ Type :  Array ( Array ( Float ) ) 
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> p_received_ray_20percent
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> pixel
.   .   .   .   .   <IN>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> veccpy
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> ray20p
.   .   .   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   .   <VAR> diffuse_ray
.   .   .   .   <ELSE>
.   .   .   .   .   <UNIT> 
.   .   .   <IN>
.   .   .   <APP> 
.   .   .   .   <VAR> pretrace_diffuse_rays
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> pixel
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> nref
.   .   .   .   .   .   <INT> 1
.   .   <ELSE>
.   .   .   <UNIT> 
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> pretrace_pixels ------ Type :  Fun ( args = ( Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Int  Int  Float  Float  Float ) -> exp = ( Unit ) ) 
.   <ARGS> line, x, group_id, lc0, lc1, lc2,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> x
.   <THEN>
.   .   <LET> xdisp ------ Type :  Float 
.   .   .   <FMUL> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> scan_pitch
.   .   .   .   .   <INT> 0
.   .   .   .   <ItoF> 
.   .   .   .   .   <SUB> 
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> image_center
.   .   .   .   .   .   .   <INT> 0
.   .   <IN>
.   .   <LET> Tu200 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> ptrace_dirvec
.   .   .   .   <INT> 0
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> xdisp
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> screenx_dir
.   .   .   .   .   .   .   <INT> 0
.   .   .   .   .   <VAR> lc0
.   .   <IN>
.   .   <LET> Tu199 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> ptrace_dirvec
.   .   .   .   <INT> 1
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> xdisp
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> screenx_dir
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   <VAR> lc1
.   .   <IN>
.   .   <LET> Tu198 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> ptrace_dirvec
.   .   .   .   <INT> 2
.   .   .   .   <FADD> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <VAR> xdisp
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> screenx_dir
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   <VAR> lc2
.   .   <IN>
.   .   <LET> Tu197 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> vecunit_sgn
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> ptrace_dirvec
.   .   .   .   .   <BOOL> false
.   .   <IN>
.   .   <LET> Tu196 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> vecbzero
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> rgb
.   .   <IN>
.   .   <LET> Tu195 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> veccpy
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> startp
.   .   .   .   .   <VAR> viewpoint
.   .   <IN>
.   .   <LET> Tu194 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> trace_ray
.   .   .   .   <ARGS> 
.   .   .   .   .   <INT> 0
.   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   <VAR> ptrace_dirvec
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> line
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   <FLOAT> 0.
.   .   <IN>
.   .   <LET> Tu193 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> veccpy
.   .   .   .   <ARGS> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> p_rgb
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> line
.   .   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   <VAR> rgb
.   .   <IN>
.   .   <LET> Tu192 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> p_set_group_id
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> line
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   <VAR> group_id
.   .   <IN>
.   .   <LET> Tu191 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> pretrace_diffuse_rays
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> line
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   <INT> 0
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> pretrace_pixels
.   .   .   <ARGS> 
.   .   .   .   <VAR> line
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> x
.   .   .   .   .   <INT> 1
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> add_mod5
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> group_id
.   .   .   .   .   .   <INT> 1
.   .   .   .   <VAR> lc0
.   .   .   .   <VAR> lc1
.   .   .   .   <VAR> lc2
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> pretrace_line ------ Type :  Fun ( args = ( Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Int  Int ) -> exp = ( Unit ) ) 
.   <ARGS> line, y, group_id,  </ARGS>
.   <LET> ydisp ------ Type :  Float 
.   .   <FMUL> 
.   .   .   <GET> 
.   .   .   .   <VAR> scan_pitch
.   .   .   .   <INT> 0
.   .   .   <ItoF> 
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> y
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> image_center
.   .   .   .   .   .   <INT> 1
.   <IN>
.   <LET> lc0 ------ Type :  Float 
.   .   <FADD> 
.   .   .   <FMUL> 
.   .   .   .   <VAR> ydisp
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> screeny_dir
.   .   .   .   .   <INT> 0
.   .   .   <GET> 
.   .   .   .   <VAR> screenz_dir
.   .   .   .   <INT> 0
.   <IN>
.   <LET> lc1 ------ Type :  Float 
.   .   <FADD> 
.   .   .   <FMUL> 
.   .   .   .   <VAR> ydisp
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> screeny_dir
.   .   .   .   .   <INT> 1
.   .   .   <GET> 
.   .   .   .   <VAR> screenz_dir
.   .   .   .   <INT> 1
.   <IN>
.   <LET> lc2 ------ Type :  Float 
.   .   <FADD> 
.   .   .   <FMUL> 
.   .   .   .   <VAR> ydisp
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> screeny_dir
.   .   .   .   .   <INT> 2
.   .   .   <GET> 
.   .   .   .   <VAR> screenz_dir
.   .   .   .   <INT> 2
.   <IN>
.   <APP> 
.   .   <VAR> pretrace_pixels
.   .   <ARGS> 
.   .   .   <VAR> line
.   .   .   <SUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> image_size
.   .   .   .   .   <INT> 0
.   .   .   .   <INT> 1
.   .   .   <VAR> group_id
.   .   .   <VAR> lc0
.   .   .   <VAR> lc1
.   .   .   <VAR> lc2
<IN>
<LETREC> scan_pixel ------ Type :  Fun ( args = ( Int  Int  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) ) -> exp = ( Unit ) ) 
.   <ARGS> x, y, prev, cur, next,  </ARGS>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> image_size
.   .   .   .   .   <INT> 0
.   .   .   .   <VAR> x
.   <THEN>
.   .   <LET> Tu203 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> veccpy
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> rgb
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> p_rgb
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> cur
.   .   .   .   .   .   .   .   <VAR> x
.   .   <IN>
.   .   <LET> Tu202 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> neighbors_exist
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <VAR> y
.   .   .   .   .   .   <VAR> next
.   .   .   <THEN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> try_exploit_neighbors
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <VAR> y
.   .   .   .   .   .   <VAR> prev
.   .   .   .   .   .   <VAR> cur
.   .   .   .   .   .   <VAR> next
.   .   .   .   .   .   <INT> 0
.   .   .   <ELSE>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> do_without_neighbors
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> cur
.   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <INT> 0
.   .   <IN>
.   .   <LET> Tu201 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> write_rgb
.   .   .   .   <ARGS> 
.   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> scan_pixel
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> x
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> y
.   .   .   .   <VAR> prev
.   .   .   .   <VAR> cur
.   .   .   .   <VAR> next
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> scan_line ------ Type :  Fun ( args = ( Int  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> y, prev, cur, next, group_id,  </ARGS>
.   <IF>
.   .   <NOT> 
.   .   .   <LE> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> image_size
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> y
.   <THEN>
.   .   <LET> Tu205 ------ Type :  Unit 
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <SUB> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> image_size
.   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> y
.   .   .   <THEN>
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> pretrace_line
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> next
.   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   <VAR> y
.   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   .   <VAR> group_id
.   .   .   <ELSE>
.   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu204 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> scan_pixel
.   .   .   .   <ARGS> 
.   .   .   .   .   <INT> 0
.   .   .   .   .   <VAR> y
.   .   .   .   .   <VAR> prev
.   .   .   .   .   <VAR> cur
.   .   .   .   .   <VAR> next
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> scan_line
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> y
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> cur
.   .   .   .   <VAR> next
.   .   .   .   <VAR> prev
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> add_mod5
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> group_id
.   .   .   .   .   .   <INT> 2
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> create_float5x3array ------ Type :  Fun ( args = ( Unit ) -> exp = ( Array ( Array ( Float ) ) ) ) 
.   <ARGS> Tu206,  </ARGS>
.   <LET> vec ------ Type :  Array ( Float ) 
.   .   <ARRAY> 
.   .   .   <INT> 3
.   .   .   <FLOAT> 0.
.   <IN>
.   <LET> array ------ Type :  Array ( Array ( Float ) ) 
.   .   <ARRAY> 
.   .   .   <INT> 5
.   .   .   <VAR> vec
.   <IN>
.   <LET> Tu210 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> array
.   .   .   <INT> 1
.   .   .   <ARRAY> 
.   .   .   .   <INT> 3
.   .   .   .   <FLOAT> 0.
.   <IN>
.   <LET> Tu209 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> array
.   .   .   <INT> 2
.   .   .   <ARRAY> 
.   .   .   .   <INT> 3
.   .   .   .   <FLOAT> 0.
.   <IN>
.   <LET> Tu208 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> array
.   .   .   <INT> 3
.   .   .   <ARRAY> 
.   .   .   .   <INT> 3
.   .   .   .   <FLOAT> 0.
.   <IN>
.   <LET> Tu207 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> array
.   .   .   <INT> 4
.   .   .   <ARRAY> 
.   .   .   .   <INT> 3
.   .   .   .   <FLOAT> 0.
.   <IN>
.   <VAR> array
<IN>
<LETREC> create_pixel ------ Type :  Fun ( args = ( Unit ) -> exp = ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) ) 
.   <ARGS> Tu211,  </ARGS>
.   <LET> m_rgb ------ Type :  Array ( Float ) 
.   .   <ARRAY> 
.   .   .   <INT> 3
.   .   .   <FLOAT> 0.
.   <IN>
.   <LET> m_isect_ps ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> create_float5x3array
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> m_sids ------ Type :  Array ( Int ) 
.   .   <ARRAY> 
.   .   .   <INT> 5
.   .   .   <INT> 0
.   <IN>
.   <LET> m_cdif ------ Type :  Array ( Bool ) 
.   .   <ARRAY> 
.   .   .   <INT> 5
.   .   .   <BOOL> false
.   <IN>
.   <LET> m_engy ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> create_float5x3array
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> m_r20p ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> create_float5x3array
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> m_gid ------ Type :  Array ( Int ) 
.   .   <ARRAY> 
.   .   .   <INT> 1
.   .   .   <INT> 0
.   <IN>
.   <LET> m_nvectors ------ Type :  Array ( Array ( Float ) ) 
.   .   <APP> 
.   .   .   <VAR> create_float5x3array
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <TUPLE> 
.   .   <VAR> m_rgb
.   .   <VAR> m_isect_ps
.   .   <VAR> m_sids
.   .   <VAR> m_cdif
.   .   <VAR> m_engy
.   .   <VAR> m_r20p
.   .   <VAR> m_gid
.   .   <VAR> m_nvectors
<IN>
<LETREC> init_line_elements ------ Type :  Fun ( args = ( Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) )  Int ) -> exp = ( Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) ) ) 
.   <ARGS> line, n,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> n
.   <THEN>
.   .   <LET> Tu212 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> line
.   .   .   .   <VAR> n
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> create_pixel
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> init_line_elements
.   .   .   <ARGS> 
.   .   .   .   <VAR> line
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> n
.   .   .   .   .   <INT> 1
.   <ELSE>
.   .   <VAR> line
<IN>
<LETREC> create_pixelline ------ Type :  Fun ( args = ( Unit ) -> exp = ( Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) ) ) 
.   <ARGS> Tu213,  </ARGS>
.   <LET> line ------ Type :  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) 
.   .   <ARRAY> 
.   .   .   <GET> 
.   .   .   .   <VAR> image_size
.   .   .   .   <INT> 0
.   .   .   <APP> 
.   .   .   .   <VAR> create_pixel
.   .   .   .   <ARGS> 
.   .   .   .   .   <UNIT> 
.   <IN>
.   <APP> 
.   .   <VAR> init_line_elements
.   .   <ARGS> 
.   .   .   <VAR> line
.   .   .   <SUB> 
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> image_size
.   .   .   .   .   <INT> 0
.   .   .   .   <INT> 2
<IN>
<LETREC> tan ------ Type :  Fun ( args = ( Float ) -> exp = ( Float ) ) 
.   <ARGS> x,  </ARGS>
.   <FDIV> 
.   .   <APP> 
.   .   .   <VAR> sin
.   .   .   <ARGS> 
.   .   .   .   <VAR> x
.   .   <APP> 
.   .   .   <VAR> cos
.   .   .   <ARGS> 
.   .   .   .   <VAR> x
<IN>
<LETREC> adjust_position ------ Type :  Fun ( args = ( Float  Float ) -> exp = ( Float ) ) 
.   <ARGS> h, ratio,  </ARGS>
.   <LET> l ------ Type :  Float 
.   .   <Sqrt> 
.   .   .   <FADD> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> h
.   .   .   .   .   <VAR> h
.   .   .   .   <FLOAT> 0.1
.   <IN>
.   <LET> tan_h ------ Type :  Float 
.   .   <FDIV> 
.   .   .   <FLOAT> 1.
.   .   .   <VAR> l
.   <IN>
.   <LET> theta_h ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> atan
.   .   .   <ARGS> 
.   .   .   .   <VAR> tan_h
.   <IN>
.   <LET> tan_m ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> tan
.   .   .   <ARGS> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <VAR> theta_h
.   .   .   .   .   <VAR> ratio
.   <IN>
.   <FMUL> 
.   .   <VAR> tan_m
.   .   <VAR> l
<IN>
<LETREC> calc_dirvec ------ Type :  Fun ( args = ( Int  Float  Float  Float  Float  Int  Int ) -> exp = ( Unit ) ) 
.   <ARGS> icount, x, y, rx, ry, group_id, index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 5
.   .   .   <VAR> icount
.   <THEN>
.   .   <LET> l ------ Type :  Float 
.   .   .   <Sqrt> 
.   .   .   .   <FADD> 
.   .   .   .   .   <FADD> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   .   <VAR> x
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <VAR> y
.   .   .   .   .   .   .   <VAR> y
.   .   .   .   .   <FLOAT> 1.
.   .   <IN>
.   .   <LET> vx ------ Type :  Float 
.   .   .   <FDIV> 
.   .   .   .   <VAR> x
.   .   .   .   <VAR> l
.   .   <IN>
.   .   <LET> vy ------ Type :  Float 
.   .   .   <FDIV> 
.   .   .   .   <VAR> y
.   .   .   .   <VAR> l
.   .   <IN>
.   .   <LET> vz ------ Type :  Float 
.   .   .   <FDIV> 
.   .   .   .   <FLOAT> 1.
.   .   .   .   <VAR> l
.   .   <IN>
.   .   <LET> dgroup ------ Type :  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) 
.   .   .   <GET> 
.   .   .   .   <VAR> dirvecs
.   .   .   .   <VAR> group_id
.   .   <IN>
.   .   <LET> Tu218 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> vecset
.   .   .   .   <ARGS> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> d_vec
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dgroup
.   .   .   .   .   .   .   .   <VAR> index
.   .   .   .   .   <VAR> vx
.   .   .   .   .   <VAR> vy
.   .   .   .   .   <VAR> vz
.   .   <IN>
.   .   <LET> Tu217 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> vecset
.   .   .   .   <ARGS> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> d_vec
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dgroup
.   .   .   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   .   .   .   <INT> 40
.   .   .   .   .   <VAR> vx
.   .   .   .   .   <VAR> vz
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <VAR> vy
.   .   <IN>
.   .   <LET> Tu216 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> vecset
.   .   .   .   <ARGS> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> d_vec
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dgroup
.   .   .   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   .   .   .   <INT> 80
.   .   .   .   .   <VAR> vz
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <VAR> vx
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <VAR> vy
.   .   <IN>
.   .   <LET> Tu215 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> vecset
.   .   .   .   <ARGS> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> d_vec
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dgroup
.   .   .   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   .   .   .   <INT> 1
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <VAR> vx
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <VAR> vy
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <VAR> vz
.   .   <IN>
.   .   <LET> Tu214 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> vecset
.   .   .   .   <ARGS> 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> d_vec
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   .   <VAR> dgroup
.   .   .   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   .   .   .   <INT> 41
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <VAR> vx
.   .   .   .   .   <FNEG> 
.   .   .   .   .   .   <VAR> vz
.   .   .   .   .   <VAR> vy
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> vecset
.   .   .   <ARGS> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> d_vec
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <GET> 
.   .   .   .   .   .   .   <VAR> dgroup
.   .   .   .   .   .   .   <ADD> 
.   .   .   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   .   .   <INT> 81
.   .   .   .   <FNEG> 
.   .   .   .   .   <VAR> vz
.   .   .   .   <VAR> vx
.   .   .   .   <VAR> vy
.   <ELSE>
.   .   <LET> x2 ------ Type :  Float 
.   .   .   <APP> 
.   .   .   .   <VAR> adjust_position
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> y
.   .   .   .   .   <VAR> rx
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> calc_dirvec
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> icount
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> x2
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> adjust_position
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> x2
.   .   .   .   .   .   <VAR> ry
.   .   .   .   <VAR> rx
.   .   .   .   <VAR> ry
.   .   .   .   <VAR> group_id
.   .   .   .   <VAR> index
<IN>
<LETREC> calc_dirvecs ------ Type :  Fun ( args = ( Int  Float  Int  Int ) -> exp = ( Unit ) ) 
.   <ARGS> col, ry, group_id, index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> col
.   <THEN>
.   .   <LET> rx ------ Type :  Float 
.   .   .   <FSUB> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <ItoF> 
.   .   .   .   .   .   <VAR> col
.   .   .   .   .   <FLOAT> 0.2
.   .   .   .   <FLOAT> 0.9
.   .   <IN>
.   .   <LET> Tu220 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> calc_dirvec
.   .   .   .   <ARGS> 
.   .   .   .   .   <INT> 0
.   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <VAR> rx
.   .   .   .   .   <VAR> ry
.   .   .   .   .   <VAR> group_id
.   .   .   .   .   <VAR> index
.   .   <IN>
.   .   <LET> rx2 ------ Type :  Float 
.   .   .   <FADD> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <ItoF> 
.   .   .   .   .   .   <VAR> col
.   .   .   .   .   <FLOAT> 0.2
.   .   .   .   <FLOAT> 0.1
.   .   <IN>
.   .   <LET> Tu219 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> calc_dirvec
.   .   .   .   <ARGS> 
.   .   .   .   .   <INT> 0
.   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <FLOAT> 0.
.   .   .   .   .   <VAR> rx2
.   .   .   .   .   <VAR> ry
.   .   .   .   .   <VAR> group_id
.   .   .   .   .   <ADD> 
.   .   .   .   .   .   <VAR> index
.   .   .   .   .   .   <INT> 2
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> calc_dirvecs
.   .   .   <ARGS> 
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> col
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> ry
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> add_mod5
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> group_id
.   .   .   .   .   .   <INT> 1
.   .   .   .   <VAR> index
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> calc_dirvec_rows ------ Type :  Fun ( args = ( Int  Int  Int ) -> exp = ( Unit ) ) 
.   <ARGS> row, group_id, index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> row
.   <THEN>
.   .   <LET> ry ------ Type :  Float 
.   .   .   <FSUB> 
.   .   .   .   <FMUL> 
.   .   .   .   .   <ItoF> 
.   .   .   .   .   .   <VAR> row
.   .   .   .   .   <FLOAT> 0.2
.   .   .   .   <FLOAT> 0.9
.   .   <IN>
.   .   <LET> Tu221 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> calc_dirvecs
.   .   .   .   <ARGS> 
.   .   .   .   .   <INT> 4
.   .   .   .   .   <VAR> ry
.   .   .   .   .   <VAR> group_id
.   .   .   .   .   <VAR> index
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> calc_dirvec_rows
.   .   .   <ARGS> 
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> row
.   .   .   .   .   <INT> 1
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> add_mod5
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> group_id
.   .   .   .   .   .   <INT> 2
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 4
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> create_dirvec ------ Type :  Fun ( args = ( Unit ) -> exp = ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) ) ) 
.   <ARGS> Tu222,  </ARGS>
.   <LET> v3 ------ Type :  Array ( Float ) 
.   .   <ARRAY> 
.   .   .   <INT> 3
.   .   .   <FLOAT> 0.
.   <IN>
.   <LET> consts ------ Type :  Array ( Array ( Float ) ) 
.   .   <ARRAY> 
.   .   .   <GET> 
.   .   .   .   <VAR> n_objects
.   .   .   .   <INT> 0
.   .   .   <VAR> v3
.   <IN>
.   <TUPLE> 
.   .   <VAR> v3
.   .   <VAR> consts
<IN>
<LETREC> create_dirvec_elements ------ Type :  Fun ( args = ( Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> d, index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> index
.   <THEN>
.   .   <LET> Tu223 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> d
.   .   .   .   <VAR> index
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> create_dirvec
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> create_dirvec_elements
.   .   .   <ARGS> 
.   .   .   .   <VAR> d
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 1
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> create_dirvecs ------ Type :  Fun ( args = ( Int ) -> exp = ( Unit ) ) 
.   <ARGS> index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> index
.   <THEN>
.   .   <LET> Tu225 ------ Type :  Unit 
.   .   .   <PUT> 
.   .   .   .   <VAR> dirvecs
.   .   .   .   <VAR> index
.   .   .   .   <ARRAY> 
.   .   .   .   .   <INT> 120
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> create_dirvec
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <UNIT> 
.   .   <IN>
.   .   <LET> Tu224 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> create_dirvec_elements
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvecs
.   .   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 118
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> create_dirvecs
.   .   .   <ARGS> 
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 1
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> init_dirvec_constants ------ Type :  Fun ( args = ( Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) )  Int ) -> exp = ( Unit ) ) 
.   <ARGS> vecset, index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> index
.   <THEN>
.   .   <LET> Tu226 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> setup_dirvec_constants
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> vecset
.   .   .   .   .   .   <VAR> index
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> init_dirvec_constants
.   .   .   <ARGS> 
.   .   .   .   <VAR> vecset
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 1
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> init_vecset_constants ------ Type :  Fun ( args = ( Int ) -> exp = ( Unit ) ) 
.   <ARGS> index,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> index
.   <THEN>
.   .   <LET> Tu227 ------ Type :  Unit 
.   .   .   <APP> 
.   .   .   .   <VAR> init_dirvec_constants
.   .   .   .   <ARGS> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> dirvecs
.   .   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 119
.   .   <IN>
.   .   <APP> 
.   .   .   <VAR> init_vecset_constants
.   .   .   <ARGS> 
.   .   .   .   <SUB> 
.   .   .   .   .   <VAR> index
.   .   .   .   .   <INT> 1
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> init_dirvecs ------ Type :  Fun ( args = ( Unit ) -> exp = ( Unit ) ) 
.   <ARGS> Tu228,  </ARGS>
.   <LET> Tu230 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> create_dirvecs
.   .   .   <ARGS> 
.   .   .   .   <INT> 4
.   <IN>
.   <LET> Tu229 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> calc_dirvec_rows
.   .   .   <ARGS> 
.   .   .   .   <INT> 9
.   .   .   .   <INT> 0
.   .   .   .   <INT> 0
.   <IN>
.   <APP> 
.   .   <VAR> init_vecset_constants
.   .   <ARGS> 
.   .   .   <INT> 4
<IN>
<LETREC> add_reflection ------ Type :  Fun ( args = ( Int  Int  Float  Float  Float  Float ) -> exp = ( Unit ) ) 
.   <ARGS> index, surface_id, bright, v0, v1, v2,  </ARGS>
.   <LET> dvec ------ Type :  Tuple ( Array ( Float )  Array ( Array ( Float ) ) ) 
.   .   <APP> 
.   .   .   <VAR> create_dirvec
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu232 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> vecset
.   .   .   <ARGS> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> d_vec
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> dvec
.   .   .   .   <VAR> v0
.   .   .   .   <VAR> v1
.   .   .   .   <VAR> v2
.   <IN>
.   <LET> Tu231 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> setup_dirvec_constants
.   .   .   <ARGS> 
.   .   .   .   <VAR> dvec
.   <IN>
.   <PUT> 
.   .   <VAR> reflections
.   .   <VAR> index
.   .   <TUPLE> 
.   .   .   <VAR> surface_id
.   .   .   <VAR> dvec
.   .   .   <VAR> bright
<IN>
<LETREC> setup_rect_reflection ------ Type :  Fun ( args = ( Int  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Unit ) ) 
.   <ARGS> obj_id, obj,  </ARGS>
.   <LET> sid ------ Type :  Int 
.   .   <SHIFT_INT_LEFT> 
.   .   .   <VAR> obj_id
.   .   .   <INT> 2
.   <IN>
.   <LET> nr ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> n_reflections
.   .   .   <INT> 0
.   <IN>
.   <LET> br ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <FLOAT> 1.
.   .   .   <APP> 
.   .   .   .   <VAR> o_diffuse
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> obj
.   <IN>
.   <LET> n0 ------ Type :  Float 
.   .   <FNEG> 
.   .   .   <GET> 
.   .   .   .   <VAR> light
.   .   .   .   <INT> 0
.   <IN>
.   <LET> n1 ------ Type :  Float 
.   .   <FNEG> 
.   .   .   <GET> 
.   .   .   .   <VAR> light
.   .   .   .   <INT> 1
.   <IN>
.   <LET> n2 ------ Type :  Float 
.   .   <FNEG> 
.   .   .   <GET> 
.   .   .   .   <VAR> light
.   .   .   .   <INT> 2
.   <IN>
.   <LET> Tu235 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> add_reflection
.   .   .   <ARGS> 
.   .   .   .   <VAR> nr
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> sid
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> br
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> light
.   .   .   .   .   <INT> 0
.   .   .   .   <VAR> n1
.   .   .   .   <VAR> n2
.   <IN>
.   <LET> Tu234 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> add_reflection
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> nr
.   .   .   .   .   <INT> 1
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> sid
.   .   .   .   .   <INT> 2
.   .   .   .   <VAR> br
.   .   .   .   <VAR> n0
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> light
.   .   .   .   .   <INT> 1
.   .   .   .   <VAR> n2
.   <IN>
.   <LET> Tu233 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> add_reflection
.   .   .   <ARGS> 
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> nr
.   .   .   .   .   <INT> 2
.   .   .   .   <ADD> 
.   .   .   .   .   <VAR> sid
.   .   .   .   .   <INT> 3
.   .   .   .   <VAR> br
.   .   .   .   <VAR> n0
.   .   .   .   <VAR> n1
.   .   .   .   <GET> 
.   .   .   .   .   <VAR> light
.   .   .   .   .   <INT> 2
.   <IN>
.   <PUT> 
.   .   <VAR> n_reflections
.   .   <INT> 0
.   .   <ADD> 
.   .   .   <VAR> nr
.   .   .   <INT> 3
<IN>
<LETREC> setup_surface_reflection ------ Type :  Fun ( args = ( Int  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) ) -> exp = ( Unit ) ) 
.   <ARGS> obj_id, obj,  </ARGS>
.   <LET> sid ------ Type :  Int 
.   .   <ADD> 
.   .   .   <SHIFT_INT_LEFT> 
.   .   .   .   <VAR> obj_id
.   .   .   .   <INT> 2
.   .   .   <INT> 1
.   <IN>
.   <LET> nr ------ Type :  Int 
.   .   <GET> 
.   .   .   <VAR> n_reflections
.   .   .   <INT> 0
.   <IN>
.   <LET> br ------ Type :  Float 
.   .   <FSUB> 
.   .   .   <FLOAT> 1.
.   .   .   <APP> 
.   .   .   .   <VAR> o_diffuse
.   .   .   .   <ARGS> 
.   .   .   .   .   <VAR> obj
.   <IN>
.   <LET> p ------ Type :  Float 
.   .   <APP> 
.   .   .   <VAR> veciprod
.   .   .   <ARGS> 
.   .   .   .   <VAR> light
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_param_abc
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> obj
.   <IN>
.   <LET> Tu236 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> add_reflection
.   .   .   <ARGS> 
.   .   .   .   <VAR> nr
.   .   .   .   <VAR> sid
.   .   .   .   <VAR> br
.   .   .   .   <FSUB> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FLOAT> 2.
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_a
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> obj
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> light
.   .   .   .   .   .   <INT> 0
.   .   .   .   <FSUB> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FLOAT> 2.
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_b
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> obj
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> light
.   .   .   .   .   .   <INT> 1
.   .   .   .   <FSUB> 
.   .   .   .   .   <FMUL> 
.   .   .   .   .   .   <FMUL> 
.   .   .   .   .   .   .   <FLOAT> 2.
.   .   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   .   <VAR> o_param_c
.   .   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   .   <VAR> obj
.   .   .   .   .   .   <VAR> p
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> light
.   .   .   .   .   .   <INT> 2
.   <IN>
.   <PUT> 
.   .   <VAR> n_reflections
.   .   <INT> 0
.   .   <ADD> 
.   .   .   <VAR> nr
.   .   .   <INT> 1
<IN>
<LETREC> setup_reflections ------ Type :  Fun ( args = ( Int ) -> exp = ( Unit ) ) 
.   <ARGS> obj_id,  </ARGS>
.   <IF>
.   .   <LE> 
.   .   .   <INT> 0
.   .   .   <VAR> obj_id
.   <THEN>
.   .   <LET> obj ------ Type :  Tuple ( Int  Int  Int  Int  Array ( Float )  Array ( Float )  Bool  Array ( Float )  Array ( Float )  Array ( Float )  Array ( Float ) ) 
.   .   .   <GET> 
.   .   .   .   <VAR> objects
.   .   .   .   <VAR> obj_id
.   .   <IN>
.   .   <IF>
.   .   .   <EQ> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> o_reflectiontype
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> obj
.   .   .   .   <INT> 2
.   .   <THEN>
.   .   .   <IF>
.   .   .   .   <NOT> 
.   .   .   .   .   <LE> 
.   .   .   .   .   .   <FLOAT> 1.
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> o_diffuse
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> obj
.   .   .   <THEN>
.   .   .   .   <LET> m_shape ------ Type :  Int 
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> o_form
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> obj
.   .   .   .   <IN>
.   .   .   .   <IF>
.   .   .   .   .   <EQ> 
.   .   .   .   .   .   <VAR> m_shape
.   .   .   .   .   .   <INT> 1
.   .   .   .   <THEN>
.   .   .   .   .   <APP> 
.   .   .   .   .   .   <VAR> setup_rect_reflection
.   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   <VAR> obj_id
.   .   .   .   .   .   .   <VAR> obj
.   .   .   .   <ELSE>
.   .   .   .   .   <IF>
.   .   .   .   .   .   <EQ> 
.   .   .   .   .   .   .   <VAR> m_shape
.   .   .   .   .   .   .   <INT> 2
.   .   .   .   .   <THEN>
.   .   .   .   .   .   <APP> 
.   .   .   .   .   .   .   <VAR> setup_surface_reflection
.   .   .   .   .   .   .   <ARGS> 
.   .   .   .   .   .   .   .   <VAR> obj_id
.   .   .   .   .   .   .   .   <VAR> obj
.   .   .   .   .   <ELSE>
.   .   .   .   .   .   <UNIT> 
.   .   .   <ELSE>
.   .   .   .   <UNIT> 
.   .   <ELSE>
.   .   .   <UNIT> 
.   <ELSE>
.   .   <UNIT> 
<IN>
<LETREC> rt ------ Type :  Fun ( args = ( Int  Int ) -> exp = ( Unit ) ) 
.   <ARGS> size_x, size_y,  </ARGS>
.   <LET> Tu248 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> image_size
.   .   .   <INT> 0
.   .   .   <VAR> size_x
.   <IN>
.   <LET> Tu247 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> image_size
.   .   .   <INT> 1
.   .   .   <VAR> size_y
.   <IN>
.   <LET> Tu246 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> image_center
.   .   .   <INT> 0
.   .   .   <SHIFT_INT_RIGHT> 
.   .   .   .   <VAR> size_x
.   .   .   .   <INT> 1
.   <IN>
.   <LET> Tu245 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> image_center
.   .   .   <INT> 1
.   .   .   <SHIFT_INT_RIGHT> 
.   .   .   .   <VAR> size_y
.   .   .   .   <INT> 1
.   <IN>
.   <LET> Tu244 ------ Type :  Unit 
.   .   <PUT> 
.   .   .   <VAR> scan_pitch
.   .   .   <INT> 0
.   .   .   <FDIV> 
.   .   .   .   <FLOAT> 128.
.   .   .   .   <ItoF> 
.   .   .   .   .   <VAR> size_x
.   <IN>
.   <LET> prev ------ Type :  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) 
.   .   <APP> 
.   .   .   <VAR> create_pixelline
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> cur ------ Type :  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) 
.   .   <APP> 
.   .   .   <VAR> create_pixelline
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> next ------ Type :  Array ( Tuple ( Array ( Float )  Array ( Array ( Float ) )  Array ( Int )  Array ( Bool )  Array ( Array ( Float ) )  Array ( Array ( Float ) )  Array ( Int )  Array ( Array ( Float ) ) ) ) 
.   .   <APP> 
.   .   .   <VAR> create_pixelline
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu243 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> read_parameter
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu242 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> write_ppm_header
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu241 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> init_dirvecs
.   .   .   <ARGS> 
.   .   .   .   <UNIT> 
.   <IN>
.   <LET> Tu240 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> veccpy
.   .   .   <ARGS> 
.   .   .   .   <APP> 
.   .   .   .   .   <VAR> d_vec
.   .   .   .   .   <ARGS> 
.   .   .   .   .   .   <VAR> light_dirvec
.   .   .   .   <VAR> light
.   <IN>
.   <LET> Tu239 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> setup_dirvec_constants
.   .   .   <ARGS> 
.   .   .   .   <VAR> light_dirvec
.   <IN>
.   <LET> Tu238 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> setup_reflections
.   .   .   <ARGS> 
.   .   .   .   <SUB> 
.   .   .   .   .   <GET> 
.   .   .   .   .   .   <VAR> n_objects
.   .   .   .   .   .   <INT> 0
.   .   .   .   .   <INT> 1
.   <IN>
.   <LET> Tu237 ------ Type :  Unit 
.   .   <APP> 
.   .   .   <VAR> pretrace_line
.   .   .   <ARGS> 
.   .   .   .   <VAR> cur
.   .   .   .   <INT> 0
.   .   .   .   <INT> 0
.   <IN>
.   <APP> 
.   .   <VAR> scan_line
.   .   <ARGS> 
.   .   .   <INT> 0
.   .   .   <VAR> prev
.   .   .   <VAR> cur
.   .   .   <VAR> next
.   .   .   <INT> 2
<IN>
<LET> Tu249 ------ Type :  Unit 
.   <APP> 
.   .   <VAR> rt
.   .   <ARGS> 
.   .   .   <INT> 512
.   .   .   <INT> 512
<IN>
<UNIT> 
=================================================================================================

